digraph  {
6 [label="1_\ import\ java\.io\.OutputStream;", type_label=expression_statement];
12 [label="2_\ import\ java\.io\.IOException;", type_label=expression_statement];
18 [label="3_\ import\ java\.io\.InputStream;", type_label=expression_statement];
24 [label="4_\ import\ java\.io\.OutputStream;", type_label=expression_statement];
30 [label="5_\ import\ java\.io\.PrintWriter;", type_label=expression_statement];
36 [label="6_\ import\ java\.util\.Arrays;", type_label=expression_statement];
42 [label="7_\ import\ java\.io\.BufferedWriter;", type_label=expression_statement];
48 [label="8_\ import\ java\.io\.Writer;", type_label=expression_statement];
54 [label="9_\ import\ java\.io\.OutputStreamWriter;", type_label=expression_statement];
60 [label="10_\ import\ java\.util\.InputMismatchException;", type_label=expression_statement];
66 [label="11_\ import\ java\.io\.IOException;", type_label=expression_statement];
72 [label="12_\ import\ java\.io\.InputStream;", type_label=expression_statement];
78 [label="15_\ public\ class\ Main\ ", type_label=class_declaration];
82 [label="16_\ \ public\ static\ void\ main\ \(String\[\]\ args\)", type_label=method_declaration];
93 [label="17_\ InputStream\ inputStream\ =\ System\.in;", type_label=expression_statement];
100 [label="18_\ OutputStream\ outputStream\ =\ System\.out;", type_label=expression_statement];
107 [label="19_\ InputReader\ in\ =\ new\ InputReader\(inputStream\);", type_label=expression_statement];
115 [label="20_\ OutputWriter\ out\ =\ new\ OutputWriter\(outputStream\);", type_label=expression_statement];
123 [label="21_\ CGrandGarden\ solver\ =\ new\ CGrandGarden\(\);", type_label=expression_statement];
130 [label="22_\ solver\.solve\(1,\ in,\ out\);", type_label=expression_statement];
138 [label="23_\ out\.close\(\);", type_label=expression_statement];
143 [label="26_\ static\ class\ CGrandGarden\ ", type_label=class_declaration];
147 [label="27_\ int\ ans\ =\ 0;", type_label=expression_statement];
152 [label="29_\ \ public\ void\ solve\ \(int\ testNumber,\ InputReader\ in,\ OutputWriter\ out\)", type_label=method_declaration];
167 [label="31_\ int\ n\ =\ in\.nextInt\(\);", type_label=expression_statement];
175 [label="33_\ int\[\]\ h\ =\ new\ int\[n\ \+\ 1\];", type_label=expression_statement];
187 [label="35_\ for\(int\ i\ =\ 1;i\ <=\ n;i\+\+\)", type_label=for];
198 [label="35_\ h\[i\]\ =\ in\.nextInt\(\);", type_label=expression_statement];
207 [label="37_\ int\[\]\ a\ =\ new\ int\[n\ \+\ 1\];", type_label=expression_statement];
219 [label="39_\ Arrays\.fill\(a,\ 0\);", type_label=expression_statement];
226 [label="41_\ recurse\(a,\ h,\ 1,\ n\);", type_label=expression_statement];
234 [label="43_\ out\.println\(ans\);", type_label=expression_statement];
240 [label="46_\ \ private\ void\ recurse\ \(int\[\]\ a,\ int\[\]\ h,\ int\ start,\ int\ n\)", type_label=method_declaration];
262 [label="47_\ int\ s\ =\ start;", type_label=expression_statement];
267 [label="50_\ if\(start\ >\ n\)", type_label=if];
273 [label="51_\ return;", type_label=return];
274 [label="54_\ boolean\ flag\ =\ false;", type_label=expression_statement];
279 [label="55_\ for\(int\ i\ =\ start;i\ <=\ n;i\+\+\)", type_label=for];
291 [label="56_\ if\(h\[i\]\ ==\ 0\)", type_label=if];
299 [label="57_\ flag\ =\ true;", type_label=expression_statement];
303 [label="58_\ recurse\(a,\ h,\ s,\ i\ \-\ 1\);", type_label=expression_statement];
313 [label="59_\ s\ =\ i\ \+\ 1;", type_label=expression_statement];
319 [label="63_\ if\(flag\ ==\ true\)", type_label=if];
325 [label="64_\ recurse\(a,\ h,\ s,\ n\);", type_label=expression_statement];
333 [label="65_\ return;", type_label=return];
334 [label="67_\ for\(int\ i\ =\ start;i\ <=\ n;i\+\+\)", type_label=for];
346 [label="68_\ a\[i\]\+\+;", type_label=expression_statement];
351 [label="71_\ ans\+\+;", type_label=expression_statement];
354 [label="73_\ for\(int\ i\ =\ start;i\ <=\ n;i\+\+\)", type_label=for];
366 [label="74_\ if\(a\[i\]\ ==\ h\[i\]\)", type_label=if];
376 [label="75_\ recurse\(a,\ h,\ s,\ i\ \-\ 1\);", type_label=expression_statement];
386 [label="76_\ s\ =\ i\ \+\ 1;", type_label=expression_statement];
392 [label="81_\ recurse\(a,\ h,\ s,\ n\);", type_label=expression_statement];
400 [label="86_\ static\ class\ OutputWriter\ ", type_label=class_declaration];
404 [label="87_\ private\ final\ PrintWriter\ writer;", type_label=expression_statement];
409 [label="89_\ \ public\ OutputWriter\ \(OutputStream\ outputStream\)", type_label=constructor_declaration];
417 [label="90_\ writer\ =\ new\ PrintWriter\(new\ BufferedWriter\(new\ OutputStreamWriter\(outputStream\)\)\);", type_label=expression_statement];
430 [label="93_\ \ public\ OutputWriter\ \(Writer\ writer\)", type_label=constructor_declaration];
438 [label="94_\ this\.writer\ =\ new\ PrintWriter\(writer\);", type_label=expression_statement];
447 [label="97_\ \ public\ void\ close\ \(\)", type_label=method_declaration];
453 [label="98_\ writer\.close\(\);", type_label=expression_statement];
458 [label="101_\ \ public\ void\ println\ \(int\ i\)", type_label=method_declaration];
467 [label="102_\ writer\.println\(i\);", type_label=expression_statement];
473 [label="107_\ static\ class\ InputReader\ ", type_label=class_declaration];
477 [label="108_\ private\ InputStream\ stream;", type_label=expression_statement];
482 [label="109_\ private\ byte\[\]\ buf\ =\ new\ byte\[1024\];", type_label=expression_statement];
493 [label="110_\ private\ int\ curChar;", type_label=expression_statement];
498 [label="111_\ private\ int\ numChars;", type_label=expression_statement];
503 [label="112_\ private\ InputReader\.SpaceCharFilter\ filter;", type_label=expression_statement];
510 [label="114_\ \ public\ InputReader\ \(InputStream\ stream\)", type_label=constructor_declaration];
518 [label="115_\ this\.stream\ =\ stream;", type_label=expression_statement];
524 [label="118_\ \ public\ int\ read\ \(\)", type_label=method_declaration];
530 [label="119_\ if\(numChars\ ==\ \-1\)", type_label=if];
537 [label="120_\ throw\ new\ InputMismatchException\(\);", type_label=expression_statement];
541 [label="122_\ if\(curChar\ >=\ numChars\)", type_label=if];
547 [label="123_\ curChar\ =\ 0;", type_label=expression_statement];
551 [label="124_\ try", type_label=try];
553 [label="125_\ numChars\ =\ stream\.read\(buf\);", type_label=expression_statement];
561 [label="126_\ catch\ \(IOException\ e\)", type_label=catch];
567 [label="127_\ throw\ new\ InputMismatchException\(\);", type_label=expression_statement];
571 [label="129_\ if\(numChars\ <=\ 0\)", type_label=if];
577 [label="130_\ return\ \-1;", type_label=return];
580 [label="133_\ return\ buf\[curChar\+\+\];", type_label=return];
585 [label="136_\ \ public\ int\ nextInt\ \(\)", type_label=method_declaration];
591 [label="137_\ int\ c\ =\ read\(\);", type_label=expression_statement];
598 [label="138_\ while\(isSpaceChar\(c\)\)", type_label=while];
605 [label="139_\ c\ =\ read\(\);", type_label=expression_statement];
611 [label="141_\ int\ sgn\ =\ 1;", type_label=expression_statement];
616 [label="142_\ if\(c\ ==\ '\-'\)", type_label=if];
622 [label="143_\ sgn\ =\ \-1;", type_label=expression_statement];
627 [label="144_\ c\ =\ read\(\);", type_label=expression_statement];
633 [label="146_\ int\ res\ =\ 0;", type_label=expression_statement];
638 [label="147_\ do", type_label=do];
640 [label="148_\ if\(c\ <\ '0'\ \|\|\ c\ >\ '9'\)", type_label=if];
650 [label="149_\ throw\ new\ InputMismatchException\(\);", type_label=expression_statement];
654 [label="151_\ res\ \*=\ 10;", type_label=expression_statement];
658 [label="152_\ res\ \+=\ c\ \-\ '0';", type_label=expression_statement];
664 [label="153_\ c\ =\ read\(\);", type_label=expression_statement];
670 [label="154_\ while\(!isSpaceChar\(c\)\)", type_label=while];
676 [label="155_\ return\ res\ \*\ sgn;", type_label=return];
680 [label="158_\ \ public\ boolean\ isSpaceChar\ \(int\ c\)", type_label=method_declaration];
689 [label="159_\ if\(filter\ !=\ null\)", type_label=if];
695 [label="160_\ return\ filter\.isSpaceChar\(c\);", type_label=return];
701 [label="162_\ return\ isWhitespace\(c\);", type_label=return];
706 [label="165_\ \ public\ static\ boolean\ isWhitespace\ \(int\ c\)", type_label=method_declaration];
715 [label="166_\ return\ c\ ==\ '\ '\ \|\|\ c\ ==\ '\\n'\ \|\|\ c\ ==\ '\\r'\ \|\|\ c\ ==\ '\\t'\ \|\|\ c\ ==\ \-1;", type_label=return];
736 [label="169_\ public\ interface\ SpaceCharFilter\ ", type_label=interface_declaration];
740 [label="170_\ \ public\ boolean\ isSpaceChar\ \(int\ ch\)\ ;", type_label=method_declaration];
1 [label="1_\ start_node", type_label=start];
6 -> 12  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
12 -> 18  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
18 -> 24  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
24 -> 30  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
30 -> 36  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
36 -> 42  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
42 -> 48  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
48 -> 54  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
54 -> 60  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
60 -> 66  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
66 -> 72  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
72 -> 78  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
78 -> 82  [color=red, controlflow_type=main_method_next, edge_type=CFG_edge, key=0, label=main_method_next];
82 -> 93  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
93 -> 100  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
93 -> 107  [key=0, used_def=inputStream];
100 -> 107  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
100 -> 115  [key=0, used_def=outputStream];
107 -> 115  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
107 -> 473  [color=red, controlflow_type="constructor_call|111", edge_type=CFG_edge, key=0, label=constructor_call, target_constructor=510];
107 -> 473  [key=1];
107 -> 130  [key=0, used_def=in];
107 -> 198  [key=0, used_def=in];
115 -> 123  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
115 -> 400  [color=red, controlflow_type="constructor_call|119", edge_type=CFG_edge, key=0, label=constructor_call, target_constructor=409];
115 -> 400  [key=1];
115 -> 130  [key=0, used_def=out];
115 -> 138  [key=0, used_def=out];
123 -> 130  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
123 -> 130  [key=1, used_def=solver];
123 -> 143  [color=red, controlflow_type="constructor_call|127", edge_type=CFG_edge, key=0, label=constructor_call];
130 -> 138  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
130 -> 152  [color=red, controlflow_type="method_call|131", edge_type=CFG_edge, key=0, label=method_call];
130 -> 152  [key=1];
138 -> 447  [color=red, controlflow_type="method_call|139", edge_type=CFG_edge, key=0, label=method_call];
143 -> 147  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
143 -> 123  [key=0];
147 -> 123  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
147 -> 123  [key=1];
147 -> 234  [key=0, used_def=ans];
147 -> 351  [key=0, used_def=ans];
152 -> 167  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
152 -> 167  [key=1, used_def=in];
152 -> 234  [key=0, used_def=out];
167 -> 175  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
167 -> 175  [key=1, used_def=n];
167 -> 585  [color=red, controlflow_type="method_call|171", edge_type=CFG_edge, key=0, label=method_call];
167 -> 187  [key=0, used_def=n];
167 -> 198  [key=0, used_def=in];
167 -> 207  [key=0, used_def=n];
167 -> 226  [key=0, used_def=n];
175 -> 187  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
175 -> 226  [key=0, used_def=h];
187 -> 198  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
187 -> 207  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
187 -> 187  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
187 -> 187  [key=1, used_def=i];
198 -> 187  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
198 -> 585  [color=red, controlflow_type="method_call|203", edge_type=CFG_edge, key=0, label=method_call];
198 -> 198  [key=0, used_def=in];
207 -> 219  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
207 -> 219  [key=1, used_def=a];
207 -> 226  [key=0, used_def=a];
219 -> 226  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
219 -> 219  [key=0, used_def=Arrays];
226 -> 234  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
234 -> 130  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
240 -> 262  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
240 -> 262  [key=1, used_def=start];
240 -> 267  [key=0, used_def=start];
240 -> 279  [key=0, used_def=n];
240 -> 291  [key=0, used_def=h];
240 -> 303  [key=0, used_def=a];
240 -> 325  [key=0, used_def=a];
240 -> 334  [key=0, used_def=n];
240 -> 346  [key=0, used_def=a];
240 -> 354  [key=0, used_def=n];
240 -> 366  [key=0, used_def=a];
240 -> 376  [key=0, used_def=a];
240 -> 392  [key=0, used_def=a];
262 -> 267  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
262 -> 303  [key=0, used_def=s];
262 -> 325  [key=0, used_def=s];
262 -> 376  [key=0, used_def=s];
262 -> 392  [key=0, used_def=s];
267 -> 273  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
267 -> 274  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
273 -> 325  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
273 -> 392  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
274 -> 279  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
274 -> 319  [key=0, used_def=flag];
279 -> 291  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
279 -> 291  [key=1, used_def=i];
279 -> 319  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
279 -> 279  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
279 -> 279  [key=1, used_def=i];
279 -> 303  [key=0, used_def=i];
279 -> 313  [key=0, used_def=i];
291 -> 299  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
291 -> 279  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
299 -> 303  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
299 -> 319  [key=0, used_def=flag];
303 -> 313  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
313 -> 279  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
313 -> 303  [key=0, used_def=s];
313 -> 325  [key=0, used_def=s];
313 -> 376  [key=0, used_def=s];
313 -> 392  [key=0, used_def=s];
319 -> 325  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
319 -> 334  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
325 -> 333  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
325 -> 240  [color=red, controlflow_type="method_call|326", edge_type=CFG_edge, key=0, label=method_call];
325 -> 240  [key=1];
333 -> 325  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
333 -> 392  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
334 -> 346  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
334 -> 346  [key=1, used_def=i];
334 -> 351  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
334 -> 334  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
334 -> 334  [key=1, used_def=i];
346 -> 334  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
346 -> 334  [key=1, used_def=i];
346 -> 346  [key=0, used_def=a];
346 -> 354  [key=0, used_def=n];
346 -> 366  [key=0, used_def=a];
346 -> 376  [key=0, used_def=a];
346 -> 392  [key=0, used_def=a];
351 -> 354  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
351 -> 351  [key=0, used_def=ans];
354 -> 366  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
354 -> 366  [key=1, used_def=i];
354 -> 392  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
354 -> 354  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
354 -> 354  [key=1, used_def=i];
354 -> 376  [key=0, used_def=i];
354 -> 386  [key=0, used_def=i];
366 -> 376  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
366 -> 354  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
376 -> 386  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
386 -> 354  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
386 -> 376  [key=0, used_def=s];
386 -> 392  [key=0, used_def=s];
392 -> 325  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
392 -> 240  [color=red, controlflow_type="method_call|393", edge_type=CFG_edge, key=0, label=method_call];
392 -> 240  [key=1];
392 -> 392  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
400 -> 404  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
400 -> 115  [key=0];
404 -> 409  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
404 -> 430  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
404 -> 115  [key=0];
409 -> 417  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
409 -> 417  [key=1, used_def=outputStream];
409 -> 115  [key=0];
417 -> 115  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
417 -> 115  [key=1];
417 -> 453  [key=0, used_def=writer];
417 -> 467  [key=0, used_def=writer];
430 -> 438  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
430 -> 438  [key=1, used_def=writer];
430 -> 115  [key=0];
438 -> 115  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
438 -> 115  [key=1];
438 -> 453  [key=0, used_def=writer];
438 -> 467  [key=0, used_def=writer];
447 -> 453  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
453 -> 138  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
453 -> 453  [key=0, used_def=writer];
458 -> 467  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
458 -> 467  [key=1, used_def=i];
473 -> 477  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
473 -> 107  [key=0];
477 -> 482  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
477 -> 107  [key=0];
482 -> 493  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
482 -> 553  [key=0, used_def=buf];
482 -> 580  [key=0, used_def=buf];
482 -> 107  [key=0];
493 -> 498  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
493 -> 541  [key=0, used_def=curChar];
493 -> 580  [key=0, used_def=curChar];
493 -> 107  [key=0];
498 -> 503  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
498 -> 530  [key=0, used_def=numChars];
498 -> 541  [key=0, used_def=numChars];
498 -> 107  [key=0];
503 -> 510  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
503 -> 689  [key=0, used_def=filter];
503 -> 695  [key=0, used_def=filter];
503 -> 107  [key=0];
510 -> 518  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
510 -> 518  [key=1, used_def=stream];
510 -> 107  [key=0];
518 -> 107  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
518 -> 107  [key=1];
518 -> 553  [key=0, used_def=stream];
524 -> 530  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
530 -> 537  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
530 -> 541  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
541 -> 547  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
541 -> 580  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
547 -> 551  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
547 -> 541  [key=0, used_def=curChar];
547 -> 580  [key=0, used_def=curChar];
551 -> 553  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
553 -> 561  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
553 -> 571  [color=red, controlflow_type=try_exit, edge_type=CFG_edge, key=0, label=try_exit];
553 -> 571  [key=1, used_def=numChars];
553 -> 530  [key=0, used_def=numChars];
553 -> 541  [key=0, used_def=numChars];
553 -> 553  [key=0, used_def=stream];
561 -> 567  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
571 -> 577  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
571 -> 580  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
577 -> 591  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
577 -> 591  [key=1];
577 -> 605  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
577 -> 605  [key=1];
577 -> 627  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
577 -> 627  [key=1];
577 -> 664  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
577 -> 664  [key=1];
580 -> 591  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
580 -> 591  [key=1];
580 -> 605  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
580 -> 605  [key=1];
580 -> 627  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
580 -> 627  [key=1];
580 -> 664  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
580 -> 664  [key=1];
580 -> 541  [key=0, used_def=curChar];
580 -> 580  [key=0, used_def=curChar];
585 -> 591  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
591 -> 598  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
591 -> 598  [key=1, used_def=c];
591 -> 524  [color=red, controlflow_type="method_call|595", edge_type=CFG_edge, key=0, label=method_call];
591 -> 616  [key=0, used_def=c];
591 -> 640  [key=0, used_def=c];
591 -> 658  [key=0, used_def=c];
598 -> 605  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
598 -> 611  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
598 -> 680  [color=red, controlflow_type="method_call|600", edge_type=CFG_edge, key=0, label=method_call];
598 -> 680  [key=1];
605 -> 598  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
605 -> 598  [key=1, used_def=c];
605 -> 524  [color=red, controlflow_type="method_call|608", edge_type=CFG_edge, key=0, label=method_call];
605 -> 616  [key=0, used_def=c];
605 -> 640  [key=0, used_def=c];
605 -> 658  [key=0, used_def=c];
611 -> 616  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
611 -> 676  [key=0, used_def=sgn];
616 -> 622  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
616 -> 633  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
622 -> 627  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
622 -> 676  [key=0, used_def=sgn];
627 -> 633  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
627 -> 524  [color=red, controlflow_type="method_call|630", edge_type=CFG_edge, key=0, label=method_call];
627 -> 616  [key=0, used_def=c];
627 -> 640  [key=0, used_def=c];
627 -> 658  [key=0, used_def=c];
633 -> 638  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
633 -> 654  [key=0, used_def=res];
633 -> 676  [key=0, used_def=res];
638 -> 640  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
638 -> 680  [color=red, controlflow_type="method_call|672", edge_type=CFG_edge, key=0, label=method_call];
638 -> 680  [key=1];
640 -> 650  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
640 -> 654  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
654 -> 658  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
654 -> 658  [key=1, used_def=res];
658 -> 664  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
658 -> 654  [key=0, used_def=res];
658 -> 676  [key=0, used_def=res];
664 -> 670  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
664 -> 670  [key=1, used_def=c];
664 -> 524  [color=red, controlflow_type="method_call|667", edge_type=CFG_edge, key=0, label=method_call];
664 -> 616  [key=0, used_def=c];
664 -> 640  [key=0, used_def=c];
664 -> 658  [key=0, used_def=c];
670 -> 638  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
670 -> 676  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
676 -> 167  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
676 -> 167  [key=1];
676 -> 198  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
676 -> 198  [key=1];
680 -> 689  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
680 -> 616  [key=0, used_def=c];
680 -> 640  [key=0, used_def=c];
680 -> 658  [key=0, used_def=c];
680 -> 695  [key=0, used_def=c];
680 -> 701  [key=0, used_def=c];
689 -> 695  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
689 -> 701  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
695 -> 598  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
695 -> 598  [key=1];
695 -> 638  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
695 -> 638  [key=1];
695 -> 689  [key=0, used_def=filter];
695 -> 695  [key=0, used_def=filter];
701 -> 598  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
701 -> 598  [key=1];
701 -> 638  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
701 -> 638  [key=1];
701 -> 706  [color=red, controlflow_type="method_call|702", edge_type=CFG_edge, key=0, label=method_call];
701 -> 706  [key=1];
706 -> 715  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
706 -> 715  [key=1, used_def=c];
706 -> 616  [key=0, used_def=c];
706 -> 640  [key=0, used_def=c];
706 -> 658  [key=0, used_def=c];
715 -> 701  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
715 -> 701  [key=1];
736 -> 740  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1 -> 78  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
