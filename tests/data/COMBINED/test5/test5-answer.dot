digraph  {
6 [label="1_\ import\ java\.io\.OutputStream;", type_label=expression_statement];
12 [label="2_\ import\ java\.io\.IOException;", type_label=expression_statement];
18 [label="3_\ import\ java\.io\.InputStream;", type_label=expression_statement];
24 [label="4_\ import\ java\.io\.PrintWriter;", type_label=expression_statement];
30 [label="5_\ import\ java\.util\.StringTokenizer;", type_label=expression_statement];
36 [label="6_\ import\ java\.io\.IOException;", type_label=expression_statement];
42 [label="7_\ import\ java\.io\.BufferedReader;", type_label=expression_statement];
48 [label="8_\ import\ java\.io\.InputStreamReader;", type_label=expression_statement];
54 [label="9_\ import\ java\.io\.InputStream;", type_label=expression_statement];
60 [label="12_\ public\ class\ Main\ ", type_label=class_declaration];
64 [label="14_\ \ public\ static\ void\ main\ \(String\[\]\ args\)", type_label=method_declaration];
75 [label="15_\ InputStream\ inputStream\ =\ System\.in;", type_label=expression_statement];
82 [label="16_\ OutputStream\ outputStream\ =\ System\.out;", type_label=expression_statement];
89 [label="17_\ InputReader\ in\ =\ new\ InputReader\(inputStream\);", type_label=expression_statement];
97 [label="18_\ PrintWriter\ out\ =\ new\ PrintWriter\(outputStream\);", type_label=expression_statement];
105 [label="19_\ BBeautifulStrings\ solver\ =\ new\ BBeautifulStrings\(\);", type_label=expression_statement];
112 [label="20_\ int\ y\ =\ solver\.solve\(1,\ in,\ out\);", type_label=expression_statement];
123 [label="21_\ out\.close\(\);", type_label=expression_statement];
128 [label="22_\ solver\.solve\(0,\ n,\ ut\);", type_label=expression_statement];
136 [label="25_\ static\ class\ BBeautifulStrings\ ", type_label=class_declaration];
140 [label="27_\ static\ int\ MAX_INT\ =\ 100;", type_label=expression_statement];
146 [label="29_\ \ public\ void\ solve\ \(int\ testNumber,\ InputReader\ in,\ PrintWriter\ out\)", type_label=method_declaration];
161 [label="30_\ String\ s\ =\ in\.next\(\);", type_label=expression_statement];
169 [label="31_\ char\[\]\ chars\ =\ s\.toCharArray\(\);", type_label=expression_statement];
179 [label="32_\ int\[\]\ res\ =\ new\ int\[26\];", type_label=expression_statement];
189 [label="33_\ int\ max_int\ =\ this\.MAX_INT;", type_label=expression_statement];
196 [label="34_\ for\(int\ i\ =\ 0;i\ <\ chars\.length;i\+\+\)", type_label=for];
210 [label="35_\ res\[chars\[i\]\ \-\ 'a'\]\+\+;", type_label=expression_statement];
219 [label="37_\ for\(int\ i\ =\ 0;i\ <\ res\.length;i\+\+\)", type_label=for];
233 [label="38_\ if\(res\[i\]\ >\ 0\ \&\&\ res\[i\]\ %\ 2\ !=\ 0\)", type_label=if];
249 [label="39_\ out\.println\(\"No\"\);", type_label=expression_statement];
255 [label="40_\ return;", type_label=return];
256 [label="43_\ out\.println\(\"Yes\"\);", type_label=expression_statement];
262 [label="44_\ return\ out;", type_label=return];
264 [label="48_\ static\ class\ InputReader\ implements\ AutoCloseable\ ", type_label=class_declaration];
271 [label="49_\ public\ BufferedReader\ reader;", type_label=expression_statement];
276 [label="50_\ public\ StringTokenizer\ tokenizer;", type_label=expression_statement];
281 [label="52_\ \ public\ InputReader\ \(InputStream\ stream\)", type_label=constructor_declaration];
289 [label="53_\ reader\ =\ new\ BufferedReader\(new\ InputStreamReader\(stream\),\ 32768\);", type_label=expression_statement];
300 [label="54_\ tokenizer\ =\ null;", type_label=expression_statement];
304 [label="57_\ \ public\ String\ next\ \(\)", type_label=method_declaration];
310 [label="58_\ while\(tokenizer\ ==\ null\ \|\|\ !tokenizer\.hasMoreTokens\(\)\)", type_label=while];
322 [label="59_\ try", type_label=try];
324 [label="60_\ tokenizer\ =\ new\ StringTokenizer\(reader\.readLine\(\)\);", type_label=expression_statement];
334 [label="61_\ catch\ \(IOException\ e\)", type_label=catch];
340 [label="62_\ throw\ new\ RuntimeException\(e\);", type_label=expression_statement];
345 [label="65_\ return\ tokenizer\.nextToken\(\);", type_label=return];
350 [label="67_\ \ public\ void\ close\ \(\)", type_label=method_declaration];
1 [label="1_\ start_node", type_label=start];
6 -> 12  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
12 -> 18  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
18 -> 24  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
24 -> 30  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
30 -> 36  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
36 -> 42  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
42 -> 48  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
48 -> 54  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
54 -> 60  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
60 -> 64  [color=red, controlflow_type=main_method_next, edge_type=CFG_edge, key=0, label=main_method_next];
64 -> 75  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
75 -> 82  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
75 -> 89  [key=0, used_def=inputStream];
82 -> 89  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
82 -> 97  [key=0, used_def=outputStream];
89 -> 97  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
89 -> 264  [color=red, controlflow_type="constructor_call|93", edge_type=CFG_edge, key=0, label=constructor_call, target_constructor=281];
89 -> 264  [key=1];
89 -> 112  [key=0, used_def=in];
97 -> 105  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
97 -> 112  [key=0, used_def=out];
97 -> 123  [key=0, used_def=out];
105 -> 112  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
105 -> 112  [key=1, used_def=solver];
105 -> 136  [color=red, controlflow_type="constructor_call|109", edge_type=CFG_edge, key=0, label=constructor_call];
105 -> 128  [key=0, used_def=solver];
112 -> 123  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
112 -> 146  [color=red, controlflow_type="method_call|116", edge_type=CFG_edge, key=0, label=method_call];
112 -> 146  [key=1];
112 -> 128  [key=0, used_def=solver];
123 -> 128  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
136 -> 140  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
136 -> 105  [key=0];
140 -> 105  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
140 -> 105  [key=1];
140 -> 189  [key=0, used_def=MAX_INT];
146 -> 161  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
146 -> 161  [key=1, used_def=in];
146 -> 249  [key=0, used_def=out];
146 -> 256  [key=0, used_def=out];
161 -> 169  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
161 -> 169  [key=1, used_def=s];
161 -> 304  [color=red, controlflow_type="method_call|165", edge_type=CFG_edge, key=0, label=method_call];
169 -> 179  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
169 -> 196  [key=0, used_def="chars.length"];
169 -> 210  [key=0, used_def=chars];
179 -> 189  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
179 -> 210  [key=0, used_def=res];
179 -> 219  [key=0, used_def="res.length"];
179 -> 233  [key=0, used_def=res];
189 -> 196  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
196 -> 210  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
196 -> 210  [key=1, used_def=i];
196 -> 219  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
196 -> 196  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
196 -> 196  [key=1, used_def=i];
210 -> 196  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
210 -> 196  [key=1, used_def=i];
210 -> 210  [key=0, used_def=res];
210 -> 219  [key=0, used_def="res.length"];
210 -> 233  [key=0, used_def=res];
219 -> 233  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
219 -> 233  [key=1, used_def=i];
219 -> 256  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
219 -> 219  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
219 -> 219  [key=1, used_def=i];
233 -> 249  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
233 -> 219  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
249 -> 255  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
255 -> 112  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
256 -> 262  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
256 -> 262  [key=1, used_def=out];
262 -> 112  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
262 -> 112  [key=1];
264 -> 271  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
264 -> 89  [key=0];
271 -> 276  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
271 -> 89  [key=0];
276 -> 281  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
276 -> 89  [key=0];
281 -> 289  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
281 -> 289  [key=1, used_def=stream];
281 -> 89  [key=0];
289 -> 300  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
289 -> 324  [key=0, used_def=reader];
289 -> 89  [key=0];
300 -> 89  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
300 -> 89  [key=1];
300 -> 310  [key=0, used_def=tokenizer];
304 -> 310  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
310 -> 322  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
310 -> 345  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
310 -> 345  [key=1, used_def=tokenizer];
322 -> 324  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
324 -> 334  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
324 -> 310  [color=red, controlflow_type=try_exit, edge_type=CFG_edge, key=0, label=try_exit];
324 -> 310  [key=1, used_def=tokenizer];
324 -> 324  [key=0, used_def=reader];
334 -> 340  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
334 -> 340  [key=1, used_def=e];
345 -> 161  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
345 -> 161  [key=1];
345 -> 310  [key=0, used_def=tokenizer];
1 -> 60  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
