digraph  {
6 [label="1_\ class\ Lamp\ ", type_label=class_declaration];
9 [label="2_\ static\ boolean\ passedElement;", type_label=expression_statement];
14 [label="3_\ boolean\ ele2;", type_label=expression_statement];
18 [label="4_\ \ Lamp\ \(\)", type_label=constructor_declaration];
22 [label="5_\ wierdFn\(passedElement\);", type_label=expression_statement];
27 [label="7_\ \ void\ wierdFn\ \(boolean\ somethingStatic\)", type_label=method_declaration];
35 [label="8_\ somethingStatic\ =\ true;", type_label=expression_statement];
39 [label="12_\ class\ Main\ ", type_label=class_declaration];
42 [label="13_\ \ static\ boolean\ fn\ \(Lamp\ dog,\ Lamp\ cat\)", type_label=method_declaration];
54 [label="14_\ cat\.ele2\ =\ true;", type_label=expression_statement];
60 [label="15_\ Lamp\ temp\ =\ dog;", type_label=expression_statement];
65 [label="16_\ temp\.ele2\ =\ false;", type_label=expression_statement];
71 [label="17_\ return\ dog\.ele2;", type_label=return];
75 [label="19_\ \ public\ static\ void\ main\ \(String\[\]\ args\)", type_label=method_declaration];
86 [label="20_\ Lamp\ in\ =\ new\ Lamp\(\);", type_label=expression_statement];
93 [label="21_\ Lamp\ out\ =\ new\ Lamp\(\);", type_label=expression_statement];
100 [label="22_\ boolean\ z\ =\ fn\(in,\ out\);", type_label=expression_statement];
109 [label="23_\ System\.out\.println\(in\.ele2\);", type_label=expression_statement];
1 [label="1_\ start_node", type_label=start];
6 -> 9  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
6 -> 86  [key=0];
6 -> 93  [key=0];
9 -> 14  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
9 -> 22  [key=0, used_def=passedElement];
9 -> 86  [key=0];
9 -> 93  [key=0];
14 -> 18  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
14 -> 86  [key=0];
14 -> 93  [key=0];
18 -> 22  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
18 -> 86  [key=0];
18 -> 93  [key=0];
22 -> 27  [color=red, controlflow_type="method_call|23", edge_type=CFG_edge, key=0, label=method_call];
22 -> 27  [key=1];
22 -> 86  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
22 -> 86  [key=1];
22 -> 93  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
22 -> 93  [key=1];
27 -> 35  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
35 -> 22  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
39 -> 75  [color=red, controlflow_type=main_method_next, edge_type=CFG_edge, key=0, label=main_method_next];
42 -> 54  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
42 -> 60  [key=0, used_def=dog];
42 -> 71  [key=0, used_def="dog.ele2"];
54 -> 60  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
60 -> 65  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
65 -> 71  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
71 -> 100  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
71 -> 100  [key=1];
75 -> 86  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
86 -> 93  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
86 -> 6  [color=red, controlflow_type="constructor_call|90", edge_type=CFG_edge, key=0, label=constructor_call, target_constructor=18];
86 -> 100  [key=0, used_def=in];
86 -> 109  [key=0, used_def="in.ele2"];
93 -> 100  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
93 -> 100  [key=1, used_def=out];
93 -> 6  [color=red, controlflow_type="constructor_call|97", edge_type=CFG_edge, key=0, label=constructor_call, target_constructor=18];
100 -> 109  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
100 -> 42  [color=red, controlflow_type="method_call|104", edge_type=CFG_edge, key=0, label=method_call];
100 -> 42  [key=1];
1 -> 39  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
