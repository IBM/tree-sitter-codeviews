digraph  {
6 [label="1_\ import\ java\.io\.IOException;", type_label=expression_statement];
12 [label="2_\ import\ java\.io\.InputStream;", type_label=expression_statement];
18 [label="3_\ import\ java\.util\.NoSuchElementException;", type_label=expression_statement];
24 [label="5_\ public\ class\ Main\ ", type_label=class_declaration];
28 [label="7_\ \ public\ static\ void\ main\ \(String\[\]\ args\)", type_label=method_declaration];
39 [label="9_\ FastScanner\ sc\ =\ new\ FastScanner\(\);", type_label=expression_statement];
46 [label="10_\ int\ N\ =\ sc\.nextInt\(\);", type_label=expression_statement];
54 [label="11_\ int\[\]\ A\ =\ new\ int\[N\];", type_label=expression_statement];
64 [label="12_\ for\(int\ i\ =\ 0;i\ <\ N;i\+\+\)", type_label=for];
75 [label="13_\ A\[i\]\ =\ sc\.nextInt\(\);", type_label=expression_statement];
84 [label="14_\ int\ count\ =\ 0;", type_label=expression_statement];
89 [label="15_\ for\(int\ k\ =\ 0;k\ <\ 1000;k\+\+\)", type_label=for];
101 [label="16_\ boolean\ b\ =\ false;", type_label=expression_statement];
106 [label="19_\ for\(int\ i\ =\ 0;i\ <\ N;i\+\+\)", type_label=for];
118 [label="20_\ if\(A\[i\]\ %\ 2\ !=\ 0\)", type_label=if];
127 [label="21_\ b\ =\ true;", type_label=expression_statement];
131 [label="24_\ if\(b\ ==\ false\)", type_label=if];
137 [label="25_\ for\(int\ i\ =\ 0;i\ <\ N;i\+\+\)", type_label=for];
148 [label="26_\ A\[i\]\ /=\ 2;", type_label=expression_statement];
154 [label="27_\ count\+\+;", type_label=expression_statement];
158 [label="29_\ System\.out\.println\(count\);", type_label=expression_statement];
166 [label="30_\ return;", type_label=return];
167 [label="38_\ \ public\ static\ long\ gcd\ \(long\ a,\ long\ b\)", type_label=method_declaration];
179 [label="39_\ if\(a\ <\ b\)", type_label=if];
184 [label="40_\ return\ gcd\(b,\ a\);", type_label=return];
190 [label="41_\ long\ c\ =\ 0;", type_label=expression_statement];
195 [label="42_\ c\ =\ a\ %\ b;", type_label=expression_statement];
201 [label="43_\ if\(c\ ==\ 0\)", type_label=if];
206 [label="44_\ return\ b;", type_label=return];
208 [label="45_\ return\ gcd\(b,\ c\);", type_label=return];
214 [label="49_\ \ public\ static\ long\ lcm\ \(long\ m,\ long\ n\)", type_label=method_declaration];
226 [label="50_\ return\ m\ \*\ n\ /\ gcd\(m,\ n\);", type_label=return];
236 [label="54_\ \ public\ static\ boolean\ isPrime\ \(int\ n\)", type_label=method_declaration];
245 [label="55_\ if\(n\ <\ 2\)", type_label=if];
250 [label="56_\ return\ false;", type_label=return];
252 [label="57_\ if\(n\ ==\ 2\)", type_label=if];
257 [label="58_\ return\ true;", type_label=return];
259 [label="59_\ if\(n\ %\ 2\ ==\ 0\)", type_label=if];
266 [label="60_\ return\ false;", type_label=return];
268 [label="62_\ for\(int\ i\ =\ 3;i\ \*\ i\ <=\ n;i\ \+=\ 2\)", type_label=for];
283 [label="63_\ if\(n\ %\ i\ ==\ 0\)", type_label=if];
290 [label="64_\ return\ false;", type_label=return];
292 [label="66_\ return\ true;", type_label=return];
294 [label="71_\ class\ FastScanner\ ", type_label=class_declaration];
297 [label="72_\ private\ final\ InputStream\ in\ =\ System\.in;", type_label=expression_statement];
305 [label="73_\ private\ final\ byte\[\]\ buffer\ =\ new\ byte\[1024\];", type_label=expression_statement];
316 [label="74_\ private\ int\ ptr\ =\ 0;", type_label=expression_statement];
322 [label="75_\ private\ int\ buflen\ =\ 0;", type_label=expression_statement];
328 [label="77_\ \ private\ boolean\ hasNextByte\ \(\)", type_label=method_declaration];
334 [label="78_\ if\(ptr\ <\ buflen\)", type_label=if];
340 [label="79_\ return\ true;", type_label=return];
343 [label="81_\ ptr\ =\ 0;", type_label=expression_statement];
347 [label="82_\ try", type_label=try];
349 [label="83_\ buflen\ =\ in\.read\(buffer\);", type_label=expression_statement];
357 [label="84_\ catch\ \(IOException\ e\)", type_label=catch];
363 [label="85_\ e\.printStackTrace\(\);", type_label=expression_statement];
368 [label="87_\ if\(buflen\ <=\ 0\)", type_label=if];
374 [label="88_\ return\ false;", type_label=return];
376 [label="91_\ return\ true;", type_label=return];
378 [label="94_\ \ private\ int\ readByte\ \(\)", type_label=method_declaration];
384 [label="95_\ if\(hasNextByte\(\)\)", type_label=if];
389 [label="96_\ return\ buffer\[ptr\+\+\];", type_label=return];
394 [label="98_\ return\ \-1;", type_label=return];
397 [label="101_\ \ private\ static\ boolean\ isPrintableChar\ \(int\ c\)", type_label=method_declaration];
406 [label="102_\ return\ 33\ <=\ c\ \&\&\ c\ <=\ 126;", type_label=return];
414 [label="105_\ \ public\ boolean\ hasNext\ \(\)", type_label=method_declaration];
420 [label="106_\ while\(hasNextByte\(\)\ \&\&\ !isPrintableChar\(buffer\[ptr\]\)\)", type_label=while];
433 [label="107_\ ptr\+\+;", type_label=expression_statement];
436 [label="108_\ return\ hasNextByte\(\);", type_label=return];
440 [label="111_\ \ public\ String\ next\ \(\)", type_label=method_declaration];
446 [label="112_\ if\(!hasNext\(\)\)", type_label=if];
452 [label="113_\ throw\ new\ NoSuchElementException\(\);", type_label=expression_statement];
456 [label="114_\ StringBuilder\ sb\ =\ new\ StringBuilder\(\);", type_label=expression_statement];
463 [label="115_\ int\ b\ =\ readByte\(\);", type_label=expression_statement];
470 [label="116_\ while\(isPrintableChar\(b\)\)", type_label=while];
477 [label="117_\ sb\.appendCodePoint\(b\);", type_label=expression_statement];
483 [label="118_\ b\ =\ readByte\(\);", type_label=expression_statement];
489 [label="120_\ return\ sb\.toString\(\);", type_label=return];
494 [label="123_\ \ public\ long\ nextLong\ \(\)", type_label=method_declaration];
500 [label="124_\ if\(!hasNext\(\)\)", type_label=if];
506 [label="125_\ throw\ new\ NoSuchElementException\(\);", type_label=expression_statement];
510 [label="126_\ long\ n\ =\ 0;", type_label=expression_statement];
515 [label="127_\ boolean\ minus\ =\ false;", type_label=expression_statement];
520 [label="128_\ int\ b\ =\ readByte\(\);", type_label=expression_statement];
527 [label="129_\ if\(b\ ==\ '\-'\)", type_label=if];
533 [label="130_\ minus\ =\ true;", type_label=expression_statement];
537 [label="131_\ b\ =\ readByte\(\);", type_label=expression_statement];
543 [label="133_\ if\(b\ <\ '0'\ \|\|\ '9'\ <\ b\)", type_label=if];
553 [label="134_\ throw\ new\ NumberFormatException\(\);", type_label=expression_statement];
557 [label="136_\ while\(true\)", type_label=while];
561 [label="137_\ if\('0'\ <=\ b\ \&\&\ b\ <=\ '9'\)", type_label=if];
571 [label="138_\ n\ \*=\ 10;", type_label=expression_statement];
575 [label="139_\ n\ \+=\ b\ \-\ '0';", type_label=expression_statement];
581 [label="140_\ if\(b\ ==\ \-1\ \|\|\ !isPrintableChar\(b\)\)", type_label=if];
594 [label="141_\ return\ minus\ \?\ \-n\ :\ n;", type_label=return];
601 [label="143_\ throw\ new\ NumberFormatException\(\);", type_label=expression_statement];
605 [label="145_\ b\ =\ readByte\(\);", type_label=expression_statement];
611 [label="149_\ \ public\ int\ nextInt\ \(\)", type_label=method_declaration];
617 [label="150_\ long\ nl\ =\ nextLong\(\);", type_label=expression_statement];
624 [label="151_\ if\(nl\ <\ Integer\.MIN_VALUE\ \|\|\ nl\ >\ Integer\.MAX_VALUE\)", type_label=if];
637 [label="152_\ throw\ new\ NumberFormatException\(\);", type_label=expression_statement];
641 [label="153_\ return\ \(int\)\ nl;", type_label=return];
645 [label="156_\ \ public\ double\ nextDouble\ \(\)", type_label=method_declaration];
651 [label="157_\ return\ Double\.parseDouble\(next\(\)\);", type_label=return];
1 [label="1_\ start_node", type_label=start];
6 -> 12  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
12 -> 18  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
18 -> 24  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
24 -> 28  [color=red, controlflow_type=main_method_next, edge_type=CFG_edge, key=0, label=main_method_next];
28 -> 39  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
39 -> 46  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
39 -> 46  [key=1, used_def=sc];
39 -> 294  [color=red, controlflow_type="constructor_call|43", edge_type=CFG_edge, key=0, label=constructor_call];
39 -> 75  [key=0, used_def=sc];
46 -> 54  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
46 -> 54  [key=1, used_def=N];
46 -> 611  [color=red, controlflow_type="method_call|50", edge_type=CFG_edge, key=0, label=method_call];
46 -> 64  [key=0, used_def=N];
46 -> 75  [key=0, used_def=sc];
46 -> 106  [key=0, used_def=N];
46 -> 137  [key=0, used_def=N];
54 -> 64  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
54 -> 118  [key=0, used_def=A];
54 -> 148  [key=0, used_def=A];
64 -> 75  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
64 -> 84  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
64 -> 64  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
64 -> 64  [key=1, used_def=i];
75 -> 64  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
75 -> 611  [color=red, controlflow_type="method_call|80", edge_type=CFG_edge, key=0, label=method_call];
75 -> 75  [key=0, used_def=sc];
84 -> 89  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
84 -> 154  [key=0, used_def=count];
84 -> 158  [key=0, used_def=count];
89 -> 101  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
89 -> 89  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
89 -> 89  [key=1, used_def=k];
101 -> 106  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
101 -> 131  [key=0, used_def=b];
106 -> 118  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
106 -> 118  [key=1, used_def=i];
106 -> 131  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
106 -> 106  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
106 -> 106  [key=1, used_def=i];
118 -> 127  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
118 -> 106  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
127 -> 106  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
127 -> 131  [key=0, used_def=b];
131 -> 137  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
131 -> 158  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
137 -> 148  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
137 -> 148  [key=1, used_def=i];
137 -> 154  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
137 -> 137  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
137 -> 137  [key=1, used_def=i];
148 -> 137  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
154 -> 89  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
154 -> 154  [key=0, used_def=count];
154 -> 158  [key=0, used_def=count];
158 -> 166  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
167 -> 179  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
167 -> 179  [key=1, used_def=a];
167 -> 184  [key=0, used_def=b];
167 -> 195  [key=0, used_def=a];
167 -> 206  [key=0, used_def=b];
167 -> 208  [key=0, used_def=b];
179 -> 184  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
179 -> 190  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
184 -> 167  [color=red, controlflow_type="method_call|185", edge_type=CFG_edge, key=0, label=method_call];
184 -> 167  [key=1];
184 -> 184  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
184 -> 184  [key=1];
184 -> 208  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
184 -> 208  [key=1];
184 -> 226  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
184 -> 226  [key=1];
190 -> 195  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
195 -> 201  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
195 -> 201  [key=1, used_def=c];
195 -> 208  [key=0, used_def=c];
201 -> 206  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
201 -> 208  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
206 -> 184  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
206 -> 184  [key=1];
206 -> 208  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
206 -> 208  [key=1];
206 -> 226  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
206 -> 226  [key=1];
208 -> 184  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
208 -> 184  [key=1];
208 -> 167  [color=red, controlflow_type="method_call|209", edge_type=CFG_edge, key=0, label=method_call];
208 -> 167  [key=1];
208 -> 208  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
208 -> 208  [key=1];
208 -> 226  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
208 -> 226  [key=1];
214 -> 226  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
214 -> 226  [key=1, used_def=m];
226 -> 167  [color=red, controlflow_type="method_call|231", edge_type=CFG_edge, key=0, label=method_call];
226 -> 167  [key=1];
236 -> 245  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
236 -> 245  [key=1, used_def=n];
236 -> 252  [key=0, used_def=n];
236 -> 259  [key=0, used_def=n];
236 -> 268  [key=0, used_def=n];
236 -> 283  [key=0, used_def=n];
245 -> 250  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
245 -> 252  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
252 -> 257  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
252 -> 259  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
259 -> 266  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
259 -> 268  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
268 -> 283  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
268 -> 283  [key=1, used_def=i];
268 -> 292  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
268 -> 268  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
268 -> 268  [key=1, used_def=i];
283 -> 290  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
283 -> 268  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
294 -> 297  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
294 -> 39  [key=0];
297 -> 305  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
297 -> 349  [key=0, used_def=in];
297 -> 39  [key=0];
305 -> 316  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
305 -> 349  [key=0, used_def=buffer];
305 -> 389  [key=0, used_def=buffer];
305 -> 420  [key=0, used_def=buffer];
305 -> 39  [key=0];
316 -> 322  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
316 -> 334  [key=0, used_def=ptr];
316 -> 389  [key=0, used_def=ptr];
316 -> 420  [key=0, used_def=ptr];
316 -> 433  [key=0, used_def=ptr];
316 -> 39  [key=0];
322 -> 39  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
322 -> 39  [key=1];
322 -> 334  [key=0, used_def=buflen];
328 -> 334  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
334 -> 340  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
334 -> 343  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
340 -> 384  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
340 -> 384  [key=1];
340 -> 420  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
340 -> 420  [key=1];
340 -> 436  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
340 -> 436  [key=1];
343 -> 347  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
343 -> 334  [key=0, used_def=ptr];
343 -> 389  [key=0, used_def=ptr];
343 -> 420  [key=0, used_def=ptr];
343 -> 433  [key=0, used_def=ptr];
347 -> 349  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
349 -> 357  [color=red, controlflow_type=catch_exception, edge_type=CFG_edge, key=0, label=catch_exception];
349 -> 368  [color=red, controlflow_type=try_exit, edge_type=CFG_edge, key=0, label=try_exit];
349 -> 368  [key=1, used_def=buflen];
349 -> 334  [key=0, used_def=buflen];
349 -> 349  [key=0, used_def=in];
357 -> 363  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
357 -> 363  [key=1, used_def=e];
363 -> 368  [color=red, controlflow_type=catch_exit, edge_type=CFG_edge, key=0, label=catch_exit];
368 -> 374  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
368 -> 376  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
374 -> 384  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
374 -> 384  [key=1];
374 -> 420  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
374 -> 420  [key=1];
374 -> 436  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
374 -> 436  [key=1];
376 -> 384  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
376 -> 384  [key=1];
376 -> 420  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
376 -> 420  [key=1];
376 -> 436  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
376 -> 436  [key=1];
378 -> 384  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
384 -> 389  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
384 -> 394  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
384 -> 328  [color=red, controlflow_type="method_call|386", edge_type=CFG_edge, key=0, label=method_call];
384 -> 463  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
384 -> 483  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
384 -> 520  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
384 -> 537  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
384 -> 605  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
389 -> 463  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
389 -> 463  [key=1];
389 -> 483  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
389 -> 483  [key=1];
389 -> 520  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
389 -> 520  [key=1];
389 -> 537  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
389 -> 537  [key=1];
389 -> 605  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
389 -> 605  [key=1];
389 -> 334  [key=0, used_def=ptr];
389 -> 389  [key=0, used_def=ptr];
389 -> 420  [key=0, used_def=ptr];
389 -> 433  [key=0, used_def=ptr];
394 -> 463  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
394 -> 463  [key=1];
394 -> 483  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
394 -> 483  [key=1];
394 -> 520  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
394 -> 520  [key=1];
394 -> 537  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
394 -> 537  [key=1];
394 -> 605  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
394 -> 605  [key=1];
397 -> 406  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
397 -> 406  [key=1, used_def=c];
406 -> 470  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
406 -> 470  [key=1];
406 -> 581  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
406 -> 581  [key=1];
414 -> 420  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
420 -> 433  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
420 -> 436  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
420 -> 328  [color=red, controlflow_type="method_call|423", edge_type=CFG_edge, key=0, label=method_call];
433 -> 420  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
433 -> 420  [key=1, used_def=ptr];
433 -> 334  [key=0, used_def=ptr];
433 -> 389  [key=0, used_def=ptr];
433 -> 433  [key=0, used_def=ptr];
436 -> 328  [color=red, controlflow_type="method_call|437", edge_type=CFG_edge, key=0, label=method_call];
436 -> 446  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
436 -> 446  [key=1];
436 -> 500  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
436 -> 500  [key=1];
440 -> 446  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
446 -> 452  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
446 -> 456  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
446 -> 414  [color=red, controlflow_type="method_call|449", edge_type=CFG_edge, key=0, label=method_call];
456 -> 463  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
456 -> 477  [key=0, used_def=sb];
456 -> 489  [key=0, used_def=sb];
463 -> 470  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
463 -> 470  [key=1, used_def=b];
463 -> 378  [color=red, controlflow_type="method_call|467", edge_type=CFG_edge, key=0, label=method_call];
463 -> 477  [key=0, used_def=b];
463 -> 543  [key=0, used_def=b];
463 -> 561  [key=0, used_def=b];
463 -> 575  [key=0, used_def=b];
463 -> 581  [key=0, used_def=b];
470 -> 477  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
470 -> 489  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
470 -> 397  [color=red, controlflow_type="method_call|472", edge_type=CFG_edge, key=0, label=method_call];
470 -> 397  [key=1];
477 -> 483  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
477 -> 477  [key=0, used_def=sb];
477 -> 489  [key=0, used_def=sb];
483 -> 470  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
483 -> 470  [key=1, used_def=b];
483 -> 378  [color=red, controlflow_type="method_call|486", edge_type=CFG_edge, key=0, label=method_call];
483 -> 477  [key=0, used_def=b];
489 -> 651  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
489 -> 651  [key=1];
489 -> 477  [key=0, used_def=sb];
489 -> 489  [key=0, used_def=sb];
494 -> 500  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
500 -> 506  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
500 -> 510  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
500 -> 414  [color=red, controlflow_type="method_call|503", edge_type=CFG_edge, key=0, label=method_call];
510 -> 515  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
510 -> 571  [key=0, used_def=n];
510 -> 594  [key=0, used_def=n];
515 -> 520  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
515 -> 594  [key=0, used_def=minus];
520 -> 527  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
520 -> 527  [key=1, used_def=b];
520 -> 378  [color=red, controlflow_type="method_call|524", edge_type=CFG_edge, key=0, label=method_call];
520 -> 477  [key=0, used_def=b];
520 -> 543  [key=0, used_def=b];
520 -> 561  [key=0, used_def=b];
520 -> 575  [key=0, used_def=b];
520 -> 581  [key=0, used_def=b];
527 -> 533  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
527 -> 543  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
533 -> 537  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
533 -> 594  [key=0, used_def=minus];
537 -> 543  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
537 -> 543  [key=1, used_def=b];
537 -> 378  [color=red, controlflow_type="method_call|540", edge_type=CFG_edge, key=0, label=method_call];
537 -> 561  [key=0, used_def=b];
537 -> 575  [key=0, used_def=b];
537 -> 581  [key=0, used_def=b];
543 -> 553  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
543 -> 557  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
557 -> 561  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
557 -> 617  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
561 -> 571  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
561 -> 581  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
571 -> 575  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
571 -> 575  [key=1, used_def=n];
575 -> 605  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
575 -> 571  [key=0, used_def=n];
575 -> 594  [key=0, used_def=n];
581 -> 594  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
581 -> 601  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
581 -> 397  [color=red, controlflow_type="method_call|589", edge_type=CFG_edge, key=0, label=method_call];
581 -> 397  [key=1];
594 -> 617  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
594 -> 617  [key=1];
605 -> 557  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
605 -> 378  [color=red, controlflow_type="method_call|608", edge_type=CFG_edge, key=0, label=method_call];
605 -> 543  [key=0, used_def=b];
605 -> 561  [key=0, used_def=b];
605 -> 575  [key=0, used_def=b];
605 -> 581  [key=0, used_def=b];
611 -> 617  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
617 -> 624  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
617 -> 624  [key=1, used_def=nl];
617 -> 494  [color=red, controlflow_type="method_call|621", edge_type=CFG_edge, key=0, label=method_call];
617 -> 641  [key=0, used_def=nl];
624 -> 637  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
624 -> 641  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
641 -> 46  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
641 -> 46  [key=1];
641 -> 75  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
641 -> 75  [key=1];
645 -> 651  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
651 -> 440  [color=red, controlflow_type="method_call|656", edge_type=CFG_edge, key=0, label=method_call];
1 -> 24  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
