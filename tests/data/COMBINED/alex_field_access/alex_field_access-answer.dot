digraph  {
6 [label="1_\ import\ java\.io\.ByteArrayInputStream;", type_label=expression_statement];
12 [label="2_\ import\ java\.io\.InputStream;", type_label=expression_statement];
18 [label="3_\ import\ java\.util\.ArrayList;", type_label=expression_statement];
24 [label="4_\ import\ java\.util\.List;", type_label=expression_statement];
30 [label="5_\ import\ java\.util\.Scanner;", type_label=expression_statement];
36 [label="7_\ public\ class\ Main\ ", type_label=class_declaration];
40 [label="9_\ static\ String\ INPUT\ =\ \"\";", type_label=expression_statement];
46 [label="11_\ \ public\ static\ void\ main\ \(String\[\]\ args\)", type_label=method_declaration];
57 [label="12_\ InputStream\ is\ =\ INPUT\.isEmpty\(\)\ \?\ System\.in\ :\ new\ ByteArrayInputStream\(INPUT\.getBytes\(\)\);", type_label=expression_statement];
76 [label="14_\ Scanner\ scanner\ =\ new\ Scanner\(is\);", type_label=expression_statement];
84 [label="16_\ final\ int\ n\ =\ scanner\.nextInt\(\);", type_label=expression_statement];
93 [label="17_\ List<Position>\ positionList\ =\ new\ ArrayList<>\(n\);", type_label=expression_statement];
106 [label="18_\ for\(int\ i\ =\ 0;i\ <\ n;i\+\+\)", type_label=for];
118 [label="19_\ positionList\.add\(\\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ new\ Position\(\\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ scanner\.nextInt\(\),\\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ scanner\.nextInt\(\),\\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ scanner\.nextInt\(\)\\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \)\\n\ \ \ \ \ \ \ \ \ \ \ \ \);", type_label=expression_statement];
138 [label="28_\ System\.out\.println\(solve\(positionList\)\ \?\ \"Yes\"\ :\ \"No\"\);", type_label=expression_statement];
152 [label="31_\ static\ class\ Position\ ", type_label=class_declaration];
156 [label="32_\ int\ t;", type_label=expression_statement];
160 [label="33_\ int\ x;", type_label=expression_statement];
164 [label="34_\ int\ y;", type_label=expression_statement];
168 [label="36_\ \ public\ Position\ \(int\ t,\ int\ x,\ int\ y\)", type_label=constructor_declaration];
182 [label="37_\ this\.t\ =\ t;", type_label=expression_statement];
188 [label="38_\ this\.x\ =\ x;", type_label=expression_statement];
194 [label="39_\ this\.y\ =\ y;", type_label=expression_statement];
200 [label="43_\ \ static\ boolean\ solve\ \(List<Position>\ positionList\)", type_label=method_declaration];
212 [label="44_\ Position\ currentPosition\ =\ new\ Position\(0,\ 0,\ 0\);", type_label=expression_statement];
222 [label="45_\ for\(int\ i\ =\ 0;i\ <\ positionList\.size\(\);i\+\+\)", type_label=for];
237 [label="46_\ Position\ nextPosition\ =\ positionList\.get\(i\);", type_label=expression_statement];
246 [label="47_\ if\(!possibleMove\(currentPosition\.t,\ nextPosition\.t,\ currentPosition\.x,\ nextPosition\.x,\ currentPosition\.y,\ nextPosition\.y\)\)", type_label=if];
271 [label="48_\ return\ false;", type_label=return];
273 [label="50_\ currentPosition\ =\ nextPosition;", type_label=expression_statement];
277 [label="52_\ return\ true;", type_label=return];
279 [label="55_\ \ static\ boolean\ possibleMove\ \(int\ t1,\ int\ t2,\ int\ x1,\ int\ x2,\ int\ y1,\ int\ y2\)", type_label=method_declaration];
303 [label="56_\ int\ tDiff\ =\ t2\ \-\ t1;", type_label=expression_statement];
310 [label="57_\ int\ absX\ =\ Math\.abs\(x1\ \-\ x2\);", type_label=expression_statement];
321 [label="58_\ int\ absY\ =\ Math\.abs\(y1\ \-\ y2\);", type_label=expression_statement];
332 [label="60_\ if\(absX\ \+\ absY\ <=\ tDiff\)", type_label=if];
340 [label="61_\ if\(tDiff\ %\ 2\ ==\ \(absX\ \+\ absY\)\ %\ 2\)", type_label=if];
353 [label="62_\ return\ true;", type_label=return];
355 [label="65_\ return\ false;", type_label=return];
1 [label="1_\ start_node", type_label=start];
6 -> 12  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
12 -> 18  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
18 -> 24  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
24 -> 30  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
30 -> 36  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
36 -> 40  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
40 -> 46  [color=red, controlflow_type=main_method_next, edge_type=CFG_edge, key=0, label=main_method_next];
40 -> 57  [key=0, used_def=INPUT];
46 -> 57  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
57 -> 76  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
57 -> 76  [key=1, used_def=is];
76 -> 84  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
76 -> 84  [key=1, used_def=scanner];
84 -> 93  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
84 -> 93  [key=1, used_def=n];
84 -> 106  [key=0, used_def=n];
84 -> 118  [key=0, used_def=scanner];
93 -> 106  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
93 -> 118  [key=0, used_def=positionList];
93 -> 138  [key=0, used_def=positionList];
106 -> 118  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
106 -> 138  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
106 -> 106  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
106 -> 106  [key=1, used_def=i];
118 -> 106  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
118 -> 152  [color=red, controlflow_type="constructor_call|123", edge_type=CFG_edge, key=0, label=constructor_call];
118 -> 118  [key=0, used_def=positionList];
118 -> 138  [key=0, used_def=positionList];
138 -> 200  [color=red, controlflow_type="method_call|146", edge_type=CFG_edge, key=0, label=method_call];
138 -> 200  [key=1];
152 -> 156  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
152 -> 118  [key=0];
152 -> 212  [key=0];
156 -> 160  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
156 -> 118  [key=0];
156 -> 212  [key=0];
160 -> 164  [color=red, controlflow_type=class_next, edge_type=CFG_edge, key=0, label=class_next];
160 -> 118  [key=0];
160 -> 212  [key=0];
164 -> 168  [color=red, controlflow_type=constructor_next, edge_type=CFG_edge, key=0, label=constructor_next];
164 -> 118  [key=0];
164 -> 212  [key=0];
168 -> 182  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
168 -> 182  [key=1, used_def=t];
168 -> 188  [key=0, used_def=x];
168 -> 194  [key=0, used_def=y];
168 -> 118  [key=0];
168 -> 212  [key=0];
182 -> 188  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
182 -> 118  [key=0];
182 -> 212  [key=0];
188 -> 194  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
188 -> 118  [key=0];
188 -> 212  [key=0];
194 -> 118  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
194 -> 118  [key=1];
194 -> 212  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
194 -> 212  [key=1];
200 -> 212  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
200 -> 118  [key=0, used_def=positionList];
200 -> 138  [key=0, used_def=positionList];
200 -> 222  [key=0, used_def=positionList];
212 -> 222  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
212 -> 152  [color=red, controlflow_type="constructor_call|216", edge_type=CFG_edge, key=0, label=constructor_call, target_constructor=168];
212 -> 152  [key=1];
212 -> 246  [key=0, used_def="currentPosition.t"];
222 -> 237  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
222 -> 237  [key=1, used_def=i];
222 -> 277  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
222 -> 222  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
222 -> 222  [key=1, used_def=i];
237 -> 246  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
237 -> 246  [key=1, used_def="nextPosition.t"];
237 -> 222  [key=0, used_def=positionList];
237 -> 273  [key=0, used_def=nextPosition];
246 -> 271  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
246 -> 273  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
246 -> 279  [color=red, controlflow_type="method_call|249", edge_type=CFG_edge, key=0, label=method_call];
246 -> 279  [key=1];
271 -> 138  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
271 -> 138  [key=1];
273 -> 222  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
273 -> 246  [key=0, used_def="currentPosition.t"];
277 -> 138  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
277 -> 138  [key=1];
279 -> 303  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
279 -> 303  [key=1, used_def=t2];
279 -> 310  [key=0, used_def=x1];
279 -> 321  [key=0, used_def=y1];
303 -> 310  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
303 -> 332  [key=0, used_def=tDiff];
303 -> 340  [key=0, used_def=tDiff];
310 -> 321  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
310 -> 321  [key=1, used_def=Math];
310 -> 332  [key=0, used_def=absX];
310 -> 340  [key=0, used_def=absX];
321 -> 332  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
321 -> 332  [key=1, used_def=absY];
321 -> 310  [key=0, used_def=Math];
321 -> 340  [key=0, used_def=absY];
332 -> 340  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
332 -> 355  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
340 -> 353  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
340 -> 355  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
353 -> 246  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
353 -> 246  [key=1];
355 -> 246  [color=red, controlflow_type=method_return, edge_type=CFG_edge, key=0, label=method_return];
355 -> 246  [key=1];
1 -> 36  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
