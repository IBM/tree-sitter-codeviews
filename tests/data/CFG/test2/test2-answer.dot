digraph  {
6 [label="1_\ public\ class\ Simple\ ", type_label=class_declaration];
10 [label="3_\ \ public\ static\ int\ add\ \(int\ a,\ int\ b\)", type_label=method_declaration];
22 [label="5_\ int\ x\ =\ 0;", type_label=expression_statement];
27 [label="6_\ if\(a>b\)", type_label=if];
33 [label="7_\ x\ =\ \ a\+b;", type_label=expression_statement];
39 [label="8_\ int\ r\ =\ 0;", type_label=expression_statement];
45 [label="12_\ int\ y\ =\ 4;", type_label=expression_statement];
50 [label="13_\ y\ =\ 5\+6;", type_label=expression_statement];
56 [label="15_\ x\ =\ \ a\*b;", type_label=expression_statement];
62 [label="16_\ x\ =\ x\+3;", type_label=expression_statement];
68 [label="17_\ x\ =\ x\+5;", type_label=expression_statement];
74 [label="18_\ return\ x;", type_label=return];
1 [label="1_\ start_node", type_label=start];
10 -> 22  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
22 -> 27  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
27 -> 33  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
27 -> 45  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
33 -> 39  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
39 -> 56  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
45 -> 50  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
50 -> 56  [color=red, controlflow_type="next_line 4", edge_type=CFG_edge, key=0, label="next_line 4"];
56 -> 62  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
62 -> 68  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
68 -> 74  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
