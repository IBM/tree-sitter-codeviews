digraph  {
6 [label="1_\ public\ class\ Test\ ", type_label=class_declaration];
10 [label="3_\ \ public\ CharSequence\ toQueryString\ \(EscapeQuerySyntax\ escaper\)", type_label=method_declaration];
19 [label="4_\ StringBuilder\ path\ =\ new\ StringBuilder\(\);", type_label=expression_statement];
26 [label="5_\ path\.append\(\"/\"\)\.append\(getFirstPathElement\(\)\);", type_label=expression_statement];
38 [label="6_\ for\(\ QueryText\ pathelement:getPathElements\(1\)\)", type_label=for];
46 [label="7_\ CharSequence\ value\ =\ escaper\.escape\(\\n\ \ \ \ \ \ \ \ \ \ pathelement\.value,\\n\ \ \ \ \ \ \ \ \ \ Locale\.getDefault\(\),\\n\ \ \ \ \ \ \ \ \ \ Type\.STRING\\n\ \ \ \ \ \ \ \ \);", type_label=expression_statement];
64 [label="12_\ path\.append\(\"/\\\"\"\)\.append\(value\)\.append\(\"\\\"\"\);", type_label=expression_statement];
78 [label="14_\ return\ path\.toString\(\);", type_label=return];
1 [label="1_\ start_node", type_label=start];
10 -> 19  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
19 -> 26  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
26 -> 38  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
38 -> 46  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
38 -> 78  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
38 -> 38  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
46 -> 64  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
64 -> 38  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
