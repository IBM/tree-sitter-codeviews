digraph  {
6 [label="1_\ public\ class\ Test\ ", type_label=class_declaration];
10 [label="3_\ \ public\ static\ String\ createSafeSheetName\ \(\\n\ \ \ \ \ \ final\ String\ nameProposal,\\n\ \ \ \ \ \ char\ replaceChar\\n\ \ \ \ \)", type_label=method_declaration];
23 [label="7_\ if\(nameProposal\ ==\ null\)", type_label=if];
29 [label="8_\ return\ \"null\";", type_label=return];
31 [label="10_\ if\(nameProposal\.length\(\)\ <\ 1\)", type_label=if];
40 [label="11_\ return\ \"empty\";", type_label=return];
42 [label="13_\ final\ int\ length\ =\ Math\.min\(31,\ nameProposal\.length\(\)\);", type_label=expression_statement];
56 [label="14_\ final\ String\ shortenname\ =\ nameProposal\.substring\(0,\ length\);", type_label=expression_statement];
67 [label="15_\ final\ StringBuilder\ result\ =\ new\ StringBuilder\(shortenname\);", type_label=expression_statement];
76 [label="16_\ for\(int\ i\ =\ 0;i\ <\ length;i\+\+\)", type_label=for];
88 [label="17_\ char\ ch\ =\ result\.charAt\(i\);", type_label=expression_statement];
97 [label="18_\ switch\ \(ch\)\ ", type_label=switch];
101 [label="19_\ case\ '\\u0000':", type_label=case];
104 [label="20_\ case\ '\\u0003':", type_label=case];
107 [label="21_\ case\ ':':", type_label=case];
110 [label="22_\ case\ '/':", type_label=case];
113 [label="23_\ case\ '\\\\':", type_label=case];
116 [label="24_\ case\ '\?':", type_label=case];
119 [label="25_\ case\ '\*':", type_label=case];
122 [label="26_\ case\ '\]':", type_label=case];
125 [label="27_\ case\ '\[':", type_label=case];
128 [label="28_\ result\.setCharAt\(i,\ replaceChar\);", type_label=expression_statement];
135 [label="29_\ break;", type_label=expression_statement];
136 [label="30_\ case\ '\\'':", type_label=case];
139 [label="31_\ if\(i\ ==\ 0\ \|\|\ i\ ==\ length\ \-\ 1\)", type_label=if];
151 [label="32_\ result\.setCharAt\(i,\ replaceChar\);", type_label=expression_statement];
158 [label="34_\ break;", type_label=expression_statement];
159 [label="35_\ default:", type_label=case];
161 [label="38_\ return\ result\.toString\(\);", type_label=return];
1 [label="1_\ start_node", type_label=start];
10 -> 23  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
23 -> 29  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
23 -> 31  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
31 -> 40  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
31 -> 42  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
42 -> 56  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
56 -> 67  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
67 -> 76  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
76 -> 88  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
76 -> 161  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
76 -> 76  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
88 -> 97  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
97 -> 101  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 104  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 107  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 110  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 113  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 116  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 119  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 122  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 125  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 136  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
97 -> 159  [color=red, controlflow_type=switch_case, edge_type=CFG_edge, key=0, label=switch_case];
101 -> 104  [color=red, controlflow_type="fall through", edge_type=CFG_edge, key=0, label="fall through"];
104 -> 107  [color=red, controlflow_type="fall through", edge_type=CFG_edge, key=0, label="fall through"];
107 -> 110  [color=red, controlflow_type="fall through", edge_type=CFG_edge, key=0, label="fall through"];
110 -> 113  [color=red, controlflow_type="fall through", edge_type=CFG_edge, key=0, label="fall through"];
113 -> 116  [color=red, controlflow_type="fall through", edge_type=CFG_edge, key=0, label="fall through"];
116 -> 119  [color=red, controlflow_type="fall through", edge_type=CFG_edge, key=0, label="fall through"];
119 -> 122  [color=red, controlflow_type="fall through", edge_type=CFG_edge, key=0, label="fall through"];
122 -> 125  [color=red, controlflow_type="fall through", edge_type=CFG_edge, key=0, label="fall through"];
125 -> 128  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
128 -> 135  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
135 -> 76  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
136 -> 139  [color=red, controlflow_type=case_next, edge_type=CFG_edge, key=0, label=case_next];
139 -> 151  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
139 -> 158  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
151 -> 158  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
158 -> 76  [color=red, controlflow_type=jump_next, edge_type=CFG_edge, key=0, label=jump_next];
159 -> 76  [color=red, controlflow_type=default_exit, edge_type=CFG_edge, key=0, label=default_exit];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
