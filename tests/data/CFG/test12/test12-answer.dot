digraph  {
6 [label="1_\ public\ class\ Test\ ", type_label=class_declaration];
10 [label="1_\ \ public\ short\ FindNewDrawingGroupId\ \(\)", type_label=method_declaration];
16 [label="1_\ short\ dgId\ =\ 1\ ;", type_label=local_declaration];
23 [label="1_\ while\ \(\ DrawingGroupExists\(dgId\)\ \)", type_label=while];
29 [label="1_\ dgId\+\+;", type_label=expression_statement];
32 [label="1_\ return\ dgId;", type_label=expression_statement];
1 [label="1_\ start_node", type_label=start];
10 -> 16  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
16 -> 23  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
23 -> 29  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
23 -> 32  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
29 -> 23  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
