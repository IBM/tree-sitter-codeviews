digraph  {
6 [label="4_\ public\ class\ Test\ ", type_label=class_declaration];
10 [label="6_\ \ public\ void\ init\ \(int\ address\)", type_label=method_declaration];
19 [label="7_\ slice\ =\ pool\.buffers\[address\ >>\ ByteBlockPool\.BYTE_BLOCK_SHIFT\];", type_label=expression_statement];
31 [label="8_\ assert\ slice\ !=\ null;", type_label=expression_statement];
35 [label="9_\ upto\ =\ address\ \&\ ByteBlockPool\.BYTE_BLOCK_MASK;", type_label=expression_statement];
43 [label="10_\ offset0\ =\ address;", type_label=expression_statement];
47 [label="11_\ assert\ upto\ <\ slice\.length;", type_label=expression_statement];
1 [label="1_\ start_node", type_label=start];
10 -> 19  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
19 -> 31  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
31 -> 35  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
35 -> 43  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
43 -> 47  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
