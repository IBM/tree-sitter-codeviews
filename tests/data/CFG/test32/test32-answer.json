{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"label": "1_ public class test32 ", "type_label": "class_declaration", "id": 6}, {"label": "2_  public static final DatasetSource newDatasetSource ( String name, DatasetSourceType type,\n                                                 DatasetSourceStructure structure,\n                                                 String accessPoint,\n                                                 ResultService resultService )", "type_label": "method_declaration", "id": 10}, {"label": "7_ if( type == null)", "type_label": "if", "id": 31}, {"label": "9_ String tmpMsg = \"DatasetSource type cannot be null\";", "type_label": "expression_statement", "id": 37}, {"label": "10_ logger.error( \"newDatasetSource(): \" + tmpMsg);", "type_label": "expression_statement", "id": 42}, {"label": "11_ throw new IllegalArgumentException( tmpMsg);", "type_label": "expression_statement", "id": 50}, {"label": "14_ DatasetSource tmpDsSource = null;", "type_label": "expression_statement", "id": 55}, {"label": "16_ if( type == DatasetSourceType.getType( \"Local\"))", "type_label": "if", "id": 60}, {"label": "18_ tmpDsSource = new LocalDatasetSource();", "type_label": "expression_statement", "id": 70}, {"label": "20_ if( type == DatasetSourceType.getType( \"DodsDir\"))", "type_label": "if", "id": 76}, {"label": "22_ tmpDsSource = new DodsDirDatasetSource();", "type_label": "expression_statement", "id": 86}, {"label": "24_ if( type == DatasetSourceType.getType( \"DodsFileServer\"))", "type_label": "if", "id": 92}, {"label": "26_ tmpDsSource = new DodsFileServerDatasetSource();", "type_label": "expression_statement", "id": 102}, {"label": "28_ if( type == DatasetSourceType.getType( \"GrADSDataServer\"))", "type_label": "if", "id": 108}, {"label": "30_ tmpDsSource = new GrADSDataServerDatasetSource();", "type_label": "expression_statement", "id": 118}, {"label": "34_ String tmpMsg = \"Unsupported DatasetSource type <\" + type.toString() + \">.\";", "type_label": "expression_statement", "id": 125}, {"label": "35_ logger.error( \"newDatasetSource(): \" + tmpMsg);", "type_label": "expression_statement", "id": 137}, {"label": "36_ throw new IllegalArgumentException( tmpMsg);", "type_label": "expression_statement", "id": 145}, {"label": "39_ tmpDsSource.setName( name);", "type_label": "expression_statement", "id": 150}, {"label": "40_ tmpDsSource.setStructure( structure);", "type_label": "expression_statement", "id": 156}, {"label": "41_ int x = 4;", "type_label": "expression_statement", "id": 162}, {"label": "43_ x = 3;", "type_label": "expression_statement", "id": 168}, {"label": "45_ x = x+1;", "type_label": "expression_statement", "id": 173}, {"label": "49_ tmpDsSource.setAccessPoint( accessPoint);", "type_label": "expression_statement", "id": 179}, {"label": "50_ tmpDsSource.setResultService( resultService);", "type_label": "expression_statement", "id": 185}, {"label": "53_ logger.debug( \"DatasetSource(): constructor done.\");", "type_label": "expression_statement", "id": 191}, {"label": "54_ StringBuilder log = new StringBuilder();", "type_label": "expression_statement", "id": 197}, {"label": "55_ if( tmpDsSource.validate( log))", "type_label": "if", "id": 204}, {"label": "57_ logger.debug( \"DatasetSource(): new DatasetSource is valid: {}\", log.toString());", "type_label": "expression_statement", "id": 212}, {"label": "61_ logger.debug( \"DatasetSource(): new DatasetSource is invalid: {}\", log.toString());", "type_label": "expression_statement", "id": 223}, {"label": "64_ return( tmpDsSource);", "type_label": "return", "id": 233}, {"label": "1_ start_node", "type_label": "start", "id": 1}], "links": [{"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 10, "target": 31, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 31, "target": 37, "key": 0}, {"controlflow_type": "next_line 6", "edge_type": "CFG_edge", "label": "next_line 6", "color": "red", "source": 31, "target": 55, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 37, "target": 42, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 42, "target": 50, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 55, "target": 60, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 60, "target": 70, "key": 0}, {"controlflow_type": "neg_next", "edge_type": "CFG_edge", "label": "neg_next", "color": "red", "source": 60, "target": 76, "key": 0}, {"controlflow_type": "next_line 2", "edge_type": "CFG_edge", "label": "next_line 2", "color": "red", "source": 70, "target": 150, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 76, "target": 86, "key": 0}, {"controlflow_type": "neg_next", "edge_type": "CFG_edge", "label": "neg_next", "color": "red", "source": 76, "target": 92, "key": 0}, {"controlflow_type": "next_line 2", "edge_type": "CFG_edge", "label": "next_line 2", "color": "red", "source": 86, "target": 150, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 92, "target": 102, "key": 0}, {"controlflow_type": "neg_next", "edge_type": "CFG_edge", "label": "neg_next", "color": "red", "source": 92, "target": 108, "key": 0}, {"controlflow_type": "next_line 2", "edge_type": "CFG_edge", "label": "next_line 2", "color": "red", "source": 102, "target": 150, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 108, "target": 118, "key": 0}, {"controlflow_type": "neg_next", "edge_type": "CFG_edge", "label": "neg_next", "color": "red", "source": 108, "target": 125, "key": 0}, {"controlflow_type": "next_line 2", "edge_type": "CFG_edge", "label": "next_line 2", "color": "red", "source": 118, "target": 150, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 125, "target": 137, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 137, "target": 145, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 150, "target": 156, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 156, "target": 162, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 162, "target": 168, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 168, "target": 173, "key": 0}, {"controlflow_type": "next_line $", "edge_type": "CFG_edge", "label": "next_line $", "color": "red", "source": 173, "target": 179, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 179, "target": 185, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 185, "target": 191, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 191, "target": 197, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 197, "target": 204, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 204, "target": 212, "key": 0}, {"controlflow_type": "neg_next", "edge_type": "CFG_edge", "label": "neg_next", "color": "red", "source": 204, "target": 223, "key": 0}, {"controlflow_type": "next_line 2", "edge_type": "CFG_edge", "label": "next_line 2", "color": "red", "source": 212, "target": 233, "key": 0}, {"controlflow_type": "next_line 4", "edge_type": "CFG_edge", "label": "next_line 4", "color": "red", "source": 223, "target": 233, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 1, "target": 10, "key": 0}]}