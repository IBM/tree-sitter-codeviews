digraph  {
6 [label="1_\ public\ class\ Test\ ", type_label=class_declaration];
10 [label="3_\ \ public\ Token\ recoverInline\ \(Parser\ recognizer\)\ throws\ RecognitionException", type_label=method_declaration];
21 [label="4_\ InputMismatchException\ e\ =\ new\ InputMismatchException\(recognizer\);", type_label=expression_statement];
29 [label="5_\ for\(ParserRuleContext\ context\ =\ recognizer\.getContext\(\);context\ !=\ null;context\ =\ context\.getParent\(\)\)", type_label=for];
48 [label="7_\ context\.exception\ =\ e;", type_label=expression_statement];
54 [label="9_\ throw\ new\ ParseCancellationException\(e\);", type_label=expression_statement];
1 [label="1_\ start_node", type_label=start];
10 -> 21  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
21 -> 29  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
29 -> 48  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
29 -> 54  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
29 -> 29  [color=red, controlflow_type=loop_update, edge_type=CFG_edge, key=0, label=loop_update];
48 -> 29  [color=red, controlflow_type=loop_control, edge_type=CFG_edge, key=0, label=loop_control];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
