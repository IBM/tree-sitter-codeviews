{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"label": "1_ public class Test ", "type_label": "class_declaration", "id": 6}, {"label": "2_  protected void delete ()", "type_label": "method_declaration", "id": 10}, {"label": "3_ String question = \"Are you sure you want to delete the data from the server?\";", "type_label": "expression_statement", "id": 16}, {"label": "4_ ConfirmDialog.show(getUI(), question, new ConfirmDialog.Listener() );", "type_label": "expression_statement", "id": 21}, {"label": "5_  @Override\n               public void onClose (ConfirmDialog cd)", "type_label": "method_declaration", "id": 36}, {"label": "7_ if(cd.isConfirmed())", "type_label": "if", "id": 47}, {"label": "8_ try", "type_label": "try", "id": 54}, {"label": "9_ endpoint.delete();", "type_label": "expression_statement", "id": 56}, {"label": "10_ close();", "type_label": "expression_statement", "id": 61}, {"label": "11_ catch (IOException | IllegalArgumentException | IllegalAccessException | IllegalStateException ex)", "type_label": "catch", "id": 65}, {"label": "12_ onError(ex);", "type_label": "expression_statement", "id": 74}, {"label": "13_ catch (RuntimeException ex)", "type_label": "catch", "id": 79}, {"label": "16_ getUI().getErrorHandler().error(new com.vaadin.server.ErrorEvent(ex));", "type_label": "expression_statement", "id": 85}, {"label": "1_ start_node", "type_label": "start", "id": 1}], "links": [{"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 10, "target": 16, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 16, "target": 21, "key": 0}, {"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 36, "target": 47, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 47, "target": 54, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 54, "target": 56, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 56, "target": 61, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 56, "target": 65, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 56, "target": 79, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 61, "target": 65, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 61, "target": 79, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 65, "target": 74, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 79, "target": 85, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 1, "target": 10, "key": 0}]}