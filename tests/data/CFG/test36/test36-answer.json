{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"label": "1_ public class Test ", "type_label": "class_declaration", "id": 6}, {"label": "2_  void loadSubdivisions ()", "type_label": "method_declaration", "id": 10}, {"label": "3_ InputStream iso3166_2Resource = this.getClass().getResourceAsStream(ISO_3166_2_LOCATION);", "type_label": "expression_statement", "id": 15}, {"label": "4_ if(iso3166_2Resource == null)", "type_label": "if", "id": 27}, {"label": "5_ throw new IllegalStateException(\n          \"Can't find the list of subdivisions! Expected location was:\" +\n          ISO_3166_2_LOCATION\n        );", "type_label": "expression_statement", "id": 33}, {"label": "10_ XmlConverter<ISO3166_2_CountryEntity> converter = new XmlConverter<>(\n        \"iso_3166_country\",\n        ISO3166_2_CountryEntity.class\n      );", "type_label": "expression_statement", "id": 40}, {"label": "14_ ObservableList<ISO3166_2_CountryEntity> subdivisionsEntities = FXCollections.observableArrayList();", "type_label": "expression_statement", "id": 55}, {"label": "15_ try", "type_label": "try", "id": 66}, {"label": "16_ DataReader<ISO3166_2_CountryEntity> dataSource = new InputStreamSource<>(\n          iso3166_2Resource,\n          converter\n        );", "type_label": "expression_statement", "id": 68}, {"label": "20_ ListDataProvider<ISO3166_2_CountryEntity> listDataProvider = new ListDataProvider<>(\n          dataSource\n        );", "type_label": "expression_statement", "id": 82}, {"label": "23_ listDataProvider.setResultObservableList(subdivisionsEntities);", "type_label": "expression_statement", "id": 95}, {"label": "24_ Worker<ObservableList<ISO3166_2_CountryEntity>> worker = listDataProvider.retrieve();", "type_label": "expression_statement", "id": 101}, {"label": "25_ worker.stateProperty().addListener();", "type_label": "expression_statement", "id": 115}, {"label": "25_ obs -> ", "type_label": "expression_statement", "id": 123}, {"label": "26_ if(worker.getState() == Worker.State.SUCCEEDED)", "type_label": "if", "id": 126}, {"label": "27_ subdivisionsEntities.forEach();", "type_label": "expression_statement", "id": 139}, {"label": "27_ entity -> ", "type_label": "expression_statement", "id": 144}, {"label": "28_ if(entity.subsets != null && !entity.subsets.isEmpty())", "type_label": "if", "id": 147}, {"label": "29_ Country country = findCountryByCode(entity.code);", "type_label": "expression_statement", "id": 163}, {"label": "30_ if(!countryCodeSubdivisionMap.containsKey(country))", "type_label": "if", "id": 173}, {"label": "31_ countryCodeSubdivisionMap.put(country, new ArrayList<>());", "type_label": "expression_statement", "id": 182}, {"label": "33_ List<Subdivision> subdivisionList = countryCodeSubdivisionMap.get(\n                    country\n                  );", "type_label": "expression_statement", "id": 193}, {"label": "36_ entity.subsets.forEach();", "type_label": "expression_statement", "id": 205}, {"label": "36_ subset -> ", "type_label": "expression_statement", "id": 212}, {"label": "37_ subset.entryList.forEach();", "type_label": "expression_statement", "id": 215}, {"label": "37_ entry -> ", "type_label": "expression_statement", "id": 222}, {"label": "38_ subdivisionList.add(new Subdivision(entry.name, entry.code, country));", "type_label": "expression_statement", "id": 225}, {"label": "42_ String subdivisionName = entity.subsets.stream()\n                                     .map()\n                                     .collect(Collectors.joining(\"/\"));", "type_label": "expression_statement", "id": 240}, {"label": "43_ subset -> subset.subdivisionType", "type_label": "expression_statement", "id": 254}, {"label": "46_ countryCodeSubdivisionNameMap.put(country, subdivisionName);", "type_label": "expression_statement", "id": 266}, {"label": "49_ inProgress.set(false);", "type_label": "expression_statement", "id": 273}, {"label": "52_ catch (IOException e)", "type_label": "catch", "id": 279}, {"label": "53_ LOG.error(\"A problem was detected while loading the XML file with the available subdivisions.\", e);", "type_label": "expression_statement", "id": 285}, {"label": "1_ start_node", "type_label": "start", "id": 1}], "links": [{"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 10, "target": 15, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 15, "target": 27, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 27, "target": 33, "key": 0}, {"controlflow_type": "next_line 6", "edge_type": "CFG_edge", "label": "next_line 6", "color": "red", "source": 27, "target": 40, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 40, "target": 55, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 55, "target": 66, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 66, "target": 68, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 68, "target": 82, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 68, "target": 279, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 82, "target": 95, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 82, "target": 279, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 95, "target": 101, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 95, "target": 279, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 101, "target": 115, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 101, "target": 279, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 115, "target": 279, "key": 0}, {"controlflow_type": "lambda_invocation", "edge_type": "CFG_edge", "label": "lambda_invocation", "color": "red", "source": 115, "target": 123, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 123, "target": 279, "key": 0}, {"controlflow_type": "lambda_next", "edge_type": "CFG_edge", "label": "lambda_next", "color": "red", "source": 123, "target": 126, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 126, "target": 279, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 126, "target": 139, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 126, "target": 115, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 139, "target": 273, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 139, "target": 279, "key": 0}, {"controlflow_type": "lambda_invocation", "edge_type": "CFG_edge", "label": "lambda_invocation", "color": "red", "source": 139, "target": 144, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 144, "target": 279, "key": 0}, {"controlflow_type": "lambda_next", "edge_type": "CFG_edge", "label": "lambda_next", "color": "red", "source": 144, "target": 147, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 147, "target": 279, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 147, "target": 163, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 147, "target": 139, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 163, "target": 173, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 163, "target": 279, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 173, "target": 279, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 173, "target": 182, "key": 0}, {"controlflow_type": "next_line 6", "edge_type": "CFG_edge", "label": "next_line 6", "color": "red", "source": 173, "target": 193, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 182, "target": 279, "key": 0}, {"controlflow_type": "next_line 2", "edge_type": "CFG_edge", "label": "next_line 2", "color": "red", "source": 182, "target": 193, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 193, "target": 205, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 193, "target": 279, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 205, "target": 240, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 205, "target": 279, "key": 0}, {"controlflow_type": "lambda_invocation", "edge_type": "CFG_edge", "label": "lambda_invocation", "color": "red", "source": 205, "target": 212, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 212, "target": 279, "key": 0}, {"controlflow_type": "lambda_next", "edge_type": "CFG_edge", "label": "lambda_next", "color": "red", "source": 212, "target": 215, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 215, "target": 279, "key": 0}, {"controlflow_type": "lambda_return 3", "edge_type": "CFG_edge", "label": "lambda_return 3", "color": "red", "source": 215, "target": 205, "key": 0}, {"controlflow_type": "lambda_invocation", "edge_type": "CFG_edge", "label": "lambda_invocation", "color": "red", "source": 215, "target": 222, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 222, "target": 279, "key": 0}, {"controlflow_type": "lambda_next", "edge_type": "CFG_edge", "label": "lambda_next", "color": "red", "source": 222, "target": 225, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 225, "target": 279, "key": 0}, {"controlflow_type": "lambda_return 3", "edge_type": "CFG_edge", "label": "lambda_return 3", "color": "red", "source": 225, "target": 215, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 240, "target": 266, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 240, "target": 279, "key": 0}, {"controlflow_type": "lambda_invocation", "edge_type": "CFG_edge", "label": "lambda_invocation", "color": "red", "source": 240, "target": 254, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 254, "target": 279, "key": 0}, {"controlflow_type": "lambda_return 2", "edge_type": "CFG_edge", "label": "lambda_return 2", "color": "red", "source": 254, "target": 240, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 266, "target": 279, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 266, "target": 139, "key": 0}, {"controlflow_type": "catch_exception", "edge_type": "CFG_edge", "label": "catch_exception", "color": "red", "source": 273, "target": 279, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 273, "target": 115, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 279, "target": 285, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 1, "target": 10, "key": 0}]}