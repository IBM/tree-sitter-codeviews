{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"label": "1_ public class Test ", "type_label": "class_declaration", "id": 6}, {"label": "2_  protected void handleBodyLinks (JsonNode jsonBody, Map<String, Map<URI, String>> links, Map<String, String> linkTemplates)", "type_label": "method_declaration", "id": 10}, {"label": "3_ if(jsonBody.getNodeType() != JsonNodeType.OBJECT)", "type_label": "if", "id": 37}, {"label": "4_ return;", "type_label": "return", "id": 48}, {"label": "7_ JsonNode linksNode = jsonBody.get(\"_links\");", "type_label": "expression_statement", "id": 49}, {"label": "8_ if(linksNode == null)", "type_label": "if", "id": 58}, {"label": "9_ linksNode = jsonBody.get(\"links\");", "type_label": "expression_statement", "id": 64}, {"label": "11_ if(linksNode == null)", "type_label": "if", "id": 72}, {"label": "12_ return;", "type_label": "return", "id": 78}, {"label": "15_ linksNode.fields().forEachRemaining();", "type_label": "expression_statement", "id": 79}, {"label": "15_ x -> ", "type_label": "expression_statement", "id": 87}, {"label": "16_ String rel = x.getKey();", "type_label": "expression_statement", "id": 90}, {"label": "17_ Map<URI, String> linksForRel = getOrAdd(links, rel);", "type_label": "expression_statement", "id": 98}, {"label": "19_ switch (x.getValue().getNodeType()) ", "type_label": "switch", "id": 111}, {"label": "20_ case ARRAY:", "type_label": "case", "id": 121}, {"label": "21_ x.getValue().forEach();", "type_label": "expression_statement", "id": 124}, {"label": "21_ subobj -> ", "type_label": "expression_statement", "id": 132}, {"label": "22_ if(subobj.getNodeType() == JsonNodeType.OBJECT)", "type_label": "if", "id": 135}, {"label": "23_ parseLinkObject(rel, (ObjectNode) subobj, linksForRel, linkTemplates);", "type_label": "expression_statement", "id": 146}, {"label": "26_ break;", "type_label": "expression_statement", "id": 156}, {"label": "27_ case OBJECT:", "type_label": "case", "id": 157}, {"label": "28_ parseLinkObject(rel, (ObjectNode) x.getValue(), linksForRel, linkTemplates);", "type_label": "expression_statement", "id": 160}, {"label": "29_ break;", "type_label": "expression_statement", "id": 173}, {"label": "1_ start_node", "type_label": "start", "id": 1}], "links": [{"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 10, "target": 37, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 37, "target": 48, "key": 0}, {"controlflow_type": "next_line 6", "edge_type": "CFG_edge", "label": "next_line 6", "color": "red", "source": 37, "target": 49, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 49, "target": 58, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 58, "target": 64, "key": 0}, {"controlflow_type": "next_line 6", "edge_type": "CFG_edge", "label": "next_line 6", "color": "red", "source": 58, "target": 72, "key": 0}, {"controlflow_type": "next_line 2", "edge_type": "CFG_edge", "label": "next_line 2", "color": "red", "source": 64, "target": 72, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 72, "target": 78, "key": 0}, {"controlflow_type": "next_line 6", "edge_type": "CFG_edge", "label": "next_line 6", "color": "red", "source": 72, "target": 79, "key": 0}, {"controlflow_type": "lambda_invocation", "edge_type": "CFG_edge", "label": "lambda_invocation", "color": "red", "source": 79, "target": 87, "key": 0}, {"controlflow_type": "lambda_next", "edge_type": "CFG_edge", "label": "lambda_next", "color": "red", "source": 87, "target": 90, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 90, "target": 98, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 98, "target": 111, "key": 0}, {"controlflow_type": "switch_case", "edge_type": "CFG_edge", "label": "switch_case", "color": "red", "source": 111, "target": 121, "key": 0}, {"controlflow_type": "switch_case", "edge_type": "CFG_edge", "label": "switch_case", "color": "red", "source": 111, "target": 157, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 111, "target": 79, "key": 0}, {"controlflow_type": "case_next", "edge_type": "CFG_edge", "label": "case_next", "color": "red", "source": 121, "target": 124, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 124, "target": 156, "key": 0}, {"controlflow_type": "lambda_invocation", "edge_type": "CFG_edge", "label": "lambda_invocation", "color": "red", "source": 124, "target": 132, "key": 0}, {"controlflow_type": "lambda_next", "edge_type": "CFG_edge", "label": "lambda_next", "color": "red", "source": 132, "target": 135, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 135, "target": 146, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 135, "target": 124, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 146, "target": 124, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 156, "target": 79, "key": 0}, {"controlflow_type": "case_next", "edge_type": "CFG_edge", "label": "case_next", "color": "red", "source": 157, "target": 160, "key": 0}, {"controlflow_type": "next_line 1", "edge_type": "CFG_edge", "label": "next_line 1", "color": "red", "source": 160, "target": 173, "key": 0}, {"controlflow_type": "lambda_return 1", "edge_type": "CFG_edge", "label": "lambda_return 1", "color": "red", "source": 173, "target": 79, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 1, "target": 10, "key": 0}]}