{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"label": "2_ Decompress(DataInput input, int originalLength, int offset, int length, BytesRef bytes)", "type_label": "method_declaration", "id": 10}, {"label": "3_ Debug.Assert(offset + length <= originalLength);", "type_label": "expression_statement", "id": 32}, {"label": "4_ if ( length == 0 )", "type_label": "if", "id": 44}, {"label": "5_ bytes.Length = 0;", "type_label": "expression_statement", "id": 49}, {"label": "6_ return;", "type_label": "expression_statement", "id": 56}, {"label": "8_ byte[] compressedBytes = new byte[input.ReadVInt32()] ;", "type_label": "local_declaration", "id": 57}, {"label": "9_ input.ReadBytes(compressedBytes, 0, compressedBytes.Length);", "type_label": "expression_statement", "id": 74}, {"label": "10_ byte[] decompressedBytes = null ;", "type_label": "local_declaration", "id": 88}, {"label": "11_ using ( MemoryStream decompressedStream = new MemoryStream() )", "type_label": "using", "id": 97}, {"label": "12_ using ( MemoryStream compressedStream = new MemoryStream(compressedBytes) )", "type_label": "using", "id": 107}, {"label": "13_ using ( DeflateStream dStream = new DeflateStream(compressedStream, System.IO.Compression.CompressionMode.Decompress) )", "type_label": "using", "id": 119}, {"label": "14_ dStream.CopyTo(decompressedStream);", "type_label": "expression_statement", "id": 141}, {"label": "17_ decompressedBytes = decompressedStream.ToArray();", "type_label": "expression_statement", "id": 149}, {"label": "19_ if ( decompressedBytes.Length != originalLength )", "type_label": "if", "id": 158}, {"label": "20_ throw new CorruptIndexException(\"Length mismatch: \" + decompressedBytes.Length + \" != \" + originalLength + \" (resource=\" + input + \")\");", "type_label": "expression_statement", "id": 165}, {"label": "22_ bytes.Bytes = decompressedBytes;", "type_label": "expression_statement", "id": 185}, {"label": "23_ bytes.Offset = offset;", "type_label": "expression_statement", "id": 192}, {"label": "24_ bytes.Length = length;", "type_label": "expression_statement", "id": 199}, {"label": "1_ start_node", "type_label": "start", "id": 1}, {"label": "1_ exit_node", "type_label": "exit", "id": 2}], "links": [{"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 10, "target": 32, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 32, "target": 44, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 44, "target": 49, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 44, "target": 57, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 49, "target": 56, "key": 0}, {"controlflow_type": "return_exit", "edge_type": "CFG_edge", "label": "return_exit", "color": "red", "source": 56, "target": 2, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 57, "target": 74, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 74, "target": 88, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 88, "target": 97, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 97, "target": 158, "key": 0}, {"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 97, "target": 107, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 107, "target": 149, "key": 0}, {"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 107, "target": 119, "key": 0}, {"controlflow_type": "return_control", "edge_type": "CFG_edge", "label": "return_control", "color": "red", "source": 119, "target": 107, "key": 0}, {"controlflow_type": "first_next_line", "edge_type": "CFG_edge", "label": "first_next_line", "color": "red", "source": 119, "target": 141, "key": 0}, {"controlflow_type": "return_control", "edge_type": "CFG_edge", "label": "return_control", "color": "red", "source": 141, "target": 119, "key": 0}, {"controlflow_type": "return_control", "edge_type": "CFG_edge", "label": "return_control", "color": "red", "source": 149, "target": 97, "key": 0}, {"controlflow_type": "pos_next", "edge_type": "CFG_edge", "label": "pos_next", "color": "red", "source": 158, "target": 165, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 158, "target": 185, "key": 0}, {"controlflow_type": "throw_exit", "edge_type": "CFG_edge", "label": "throw_exit", "color": "red", "source": 165, "target": 2, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 185, "target": 192, "key": 0}, {"controlflow_type": "next_line", "edge_type": "CFG_edge", "label": "next_line", "color": "red", "source": 192, "target": 199, "key": 0}, {"controlflow_type": "exit_next", "edge_type": "CFG_edge", "label": "exit_next", "color": "red", "source": 199, "target": 2, "key": 0}, {"controlflow_type": "next", "edge_type": "CFG_edge", "label": "next", "color": "red", "source": 1, "target": 10, "key": 0}]}