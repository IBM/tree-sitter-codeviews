digraph  {
6 [label="1_\ public\ class\ Test\ ", type_label=class_declaration];
10 [label="3_\ \ public\ boolean\ isCancelled\ \(\)", type_label=method_declaration];
16 [label="4_\ lock\.lock\(\);", type_label=expression_statement];
21 [label="5_\ try", type_label=try];
23 [label="6_\ return\ pm\.isCancelled\(\);", type_label=return];
28 [label="7_\ finally", type_label=finally];
30 [label="8_\ lock\.unlock\(\);", type_label=expression_statement];
1 [label="1_\ start_node", type_label=start];
10 -> 16  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
16 -> 21  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
21 -> 23  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
23 -> 28  [color=red, controlflow_type=try_exit, edge_type=CFG_edge, key=0, label=try_exit];
28 -> 30  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
