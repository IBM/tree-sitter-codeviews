digraph  {
6 [label="1_\ public\ class\ Graph\ ", type_label=class_declaration];
10 [label="3_\ \ public\ static\ void\ main\ \(String\ args\[\]\)", type_label=method_declaration];
20 [label="4_\ int\ d\ =\ 0;", type_label=expression_statement];
25 [label="5_\ int\ y\ =\ d;", type_label=expression_statement];
30 [label="6_\ Graph\ g\ =\ new\ Graph\(\);", type_label=expression_statement];
37 [label="7_\ int\ x\ =\ g\.add\(1,2\);", type_label=expression_statement];
47 [label="8_\ d\ =\ g\.gr;", type_label=expression_statement];
53 [label="10_\ int\ m\ =\ \ 3;", type_label=expression_statement];
58 [label="12_\ Graph\ t\ =\ new\ Graph\(\);", type_label=expression_statement];
65 [label="14_\ g\.r\.l1\ =\ m;", type_label=expression_statement];
73 [label="15_\ g\.r\.l2\ =\ 4;", type_label=expression_statement];
81 [label="17_\ t\.l1\ =\ g\.l1\.main\(1,2\);", type_label=expression_statement];
94 [label="19_\ int\ y\ =\ add\(3,add\(y,d\)\);", type_label=expression_statement];
107 [label="20_\ System\.out\.print\(add\(3,add\(y,d\)\)\);", type_label=expression_statement];
123 [label="21_\ s\ =\ add\(5,4\);", type_label=expression_statement];
131 [label="23_\ System\.out\.println\(c\ \+\ \"Happy\ all\ the\ time\"\);", type_label=expression_statement];
1 [label="1_\ start_node", type_label=start];
6 -> 10  [color=red, controlflow_type=main_method_next, edge_type=CFG_edge, key=0, label=main_method_next];
6 -> 30  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
6 -> 58  [color=red, controlflow_type=class_return, edge_type=CFG_edge, key=0, label=class_return];
10 -> 20  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
20 -> 25  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
25 -> 30  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
30 -> 37  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
30 -> 6  [color=red, controlflow_type="constructor_call|34", edge_type=CFG_edge, key=0, label=constructor_call];
37 -> 47  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
47 -> 53  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
53 -> 58  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
58 -> 65  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
58 -> 6  [color=red, controlflow_type="constructor_call|62", edge_type=CFG_edge, key=0, label=constructor_call];
65 -> 73  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
73 -> 81  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
81 -> 94  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
94 -> 107  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
107 -> 123  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
123 -> 131  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
1 -> 6  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
