digraph  {
6 [label="1_\ public\ class\ Test\ ", type_label=class_declaration];
10 [label="2_\ \ @Implementation\(minSdk\ =\ LOLLIPOP_MR1\)\\n\ \ \ \ \ protected\ AccountManagerFuture<Bundle>\ removeAccount\ \(\\n\ \ \ \ \ \ \ \ \ Account\ account,\\n\ \ \ \ \ \ \ \ \ Activity\ activity,\\n\ \ \ \ \ \ \ \ \ AccountManagerCallback<Bundle>\ callback,\\n\ \ \ \ \ \ \ \ \ Handler\ handler\)", type_label=method_declaration];
40 [label="8_\ if\(account\ ==\ null\)", type_label=if];
46 [label="9_\ throw\ new\ IllegalArgumentException\(\"account\ is\ null\"\);", type_label=expression_statement];
51 [label="11_\ return\ start\(\\n\ \ \ \ \ \ \ \ \ \ \ new\ BaseRoboAccountManagerFuture<Bundle>\(callback,\ handler\)\ \);", type_label=expression_statement];
64 [label="13_\ \ @Override\\n\ \ \ \ \ \ \ \ \ \ \ \ \ public\ Bundle\ doWork\ \(\)\ throws\ OperationCanceledException,\ IOException,\ AuthenticatorException", type_label=method_declaration];
76 [label="16_\ Bundle\ result\ =\ new\ Bundle\(\);", type_label=expression_statement];
83 [label="17_\ if\(removeAccountIntent\ ==\ null\)", type_label=if];
89 [label="18_\ result\.putBoolean\(\\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ AccountManager\.KEY_BOOLEAN_RESULT,\ removeAccountExplicitly\(account\)\);", type_label=expression_statement];
102 [label="21_\ result\.putBoolean\(AccountManager\.KEY_BOOLEAN_RESULT,\ false\);", type_label=expression_statement];
111 [label="22_\ result\.putParcelable\(AccountManager\.KEY_INTENT,\ removeAccountIntent\);", type_label=expression_statement];
120 [label="24_\ return\ result;", type_label=return];
1 [label="1_\ start_node", type_label=start];
10 -> 40  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
40 -> 46  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
40 -> 51  [color=red, controlflow_type="next_line 6", edge_type=CFG_edge, key=0, label="next_line 6"];
51 -> 64  [color=red, controlflow_type=return_next, edge_type=CFG_edge, key=0, label=return_next];
64 -> 76  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
76 -> 83  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
83 -> 89  [color=red, controlflow_type=pos_next, edge_type=CFG_edge, key=0, label=pos_next];
83 -> 102  [color=red, controlflow_type=neg_next, edge_type=CFG_edge, key=0, label=neg_next];
89 -> 120  [color=red, controlflow_type="next_line 2", edge_type=CFG_edge, key=0, label="next_line 2"];
102 -> 111  [color=red, controlflow_type="next_line 1", edge_type=CFG_edge, key=0, label="next_line 1"];
111 -> 120  [color=red, controlflow_type="next_line 4", edge_type=CFG_edge, key=0, label="next_line 4"];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
