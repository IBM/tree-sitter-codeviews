{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"label": "1_ public class Simple ", "type_label": "class_declaration", "id": 6}, {"label": "2_  static void Main (string[] args)", "type_label": "method_declaration", "id": 10}, {"label": "4_ int inner, matrix, target, elseif, outer, x, y, notCaught, outermost ;", "type_label": "local_declaration", "id": 21}, {"label": "5_ inner = matrix = target = 0;", "type_label": "expression_statement", "id": 42}, {"label": "6_ elseif = outer = x = y = notCaught = outermost = 1;", "type_label": "expression_statement", "id": 53}, {"label": "7_ if ( matrix == target )", "type_label": "if", "id": 73}, {"label": "9_ if ( matrix == target )", "type_label": "if", "id": 78}, {"label": "11_ inner = y;", "type_label": "expression_statement", "id": 83}, {"label": "12_ x = y;", "type_label": "expression_statement", "id": 88}, {"label": "14_ if ( condition2(target) )", "type_label": "if", "id": 93}, {"label": "16_ elseif = y;", "type_label": "expression_statement", "id": 100}, {"label": "20_ outer = y;", "type_label": "expression_statement", "id": 106}, {"label": "21_ x = 0;", "type_label": "expression_statement", "id": 111}, {"label": "23_ catcher = x;", "type_label": "expression_statement", "id": 116}, {"label": "24_ x = 100;", "type_label": "expression_statement", "id": 121}, {"label": "26_ if ( condition3 )", "type_label": "if", "id": 126}, {"label": "27_ notCaught = x;", "type_label": "expression_statement", "id": 128}, {"label": "29_ outermost = y;", "type_label": "expression_statement", "id": 133}, {"label": "30_ x = x/100;", "type_label": "expression_statement", "id": 138}, {"label": "1_ start_node", "type_label": "start", "id": 1}], "links": [{"used_def": "'matrix'", "source": 21, "target": 42, "key": 0}, {"used_def": "'outer'", "source": 21, "target": 53, "key": 0}, {"used_def": "'matrix'", "source": 42, "target": 73, "key": 0}, {"used_def": "'matrix'", "source": 42, "target": 78, "key": 0}, {"color": "orange", "source": 42, "target": 83, "key": 0}, {"used_def": "'target'", "source": 42, "target": 93, "key": 0}, {"used_def": "'y'", "source": 53, "target": 83, "key": 0}, {"used_def": "'y'", "source": 53, "target": 88, "key": 0}, {"used_def": "'y'", "source": 53, "target": 100, "key": 0}, {"used_def": "'y'", "source": 53, "target": 106, "key": 0}, {"color": "orange", "source": 53, "target": 111, "key": 0}, {"used_def": "'x'", "source": 53, "target": 116, "key": 0}, {"color": "orange", "source": 53, "target": 121, "key": 0}, {"used_def": "'x'", "source": 53, "target": 128, "key": 0}, {"used_def": "'y'", "source": 53, "target": 133, "key": 0}, {"used_def": "'x'", "source": 53, "target": 138, "key": 0}, {"color": "green", "source": 73, "target": 126, "key": 0}, {"used_def": "'x'", "source": 88, "target": 116, "key": 0}, {"color": "orange", "source": 88, "target": 121, "key": 0}, {"used_def": "'x'", "source": 111, "target": 116, "key": 0}, {"color": "orange", "source": 111, "target": 121, "key": 0}, {"used_def": "'x'", "source": 121, "target": 138, "key": 0}]}