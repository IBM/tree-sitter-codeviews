{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"label": "1_ public class Simple ", "type_label": "class_declaration", "id": 6}, {"label": "2_  static void Main (string[] args)", "type_label": "method_declaration", "id": 10}, {"label": "4_ int inner, matrix, target, elseif, outer, x, y, notCaught, outermost;", "type_label": "expression_statement", "id": 21}, {"label": "5_ inner = matrix = target = 0;", "type_label": "expression_statement", "id": 41}, {"label": "6_ elseif = outer = x = y = notCaught = outermost = 1;", "type_label": "expression_statement", "id": 49}, {"label": "7_ if(matrix == target)", "type_label": "if", "id": 63}, {"label": "9_ if(matrix == target)", "type_label": "if", "id": 69}, {"label": "11_ inner = y;", "type_label": "expression_statement", "id": 75}, {"label": "12_ x = y;", "type_label": "expression_statement", "id": 79}, {"label": "14_ if(condition2(target))", "type_label": "if", "id": 83}, {"label": "16_ elseif = y;", "type_label": "expression_statement", "id": 90}, {"label": "20_ outer = y;", "type_label": "expression_statement", "id": 95}, {"label": "21_ x = 0;", "type_label": "expression_statement", "id": 99}, {"label": "23_ catcher = x;", "type_label": "expression_statement", "id": 103}, {"label": "24_ x = 100;", "type_label": "expression_statement", "id": 107}, {"label": "26_ if(condition3)", "type_label": "if", "id": 111}, {"label": "27_ notCaught = x;", "type_label": "expression_statement", "id": 114}, {"label": "29_ outermost = y;", "type_label": "expression_statement", "id": 118}, {"label": "30_ x = x/100;", "type_label": "expression_statement", "id": 122}, {"label": "1_ start_node", "type_label": "start", "id": 1}], "links": [{"used_def": "matrix", "source": 21, "target": 41, "key": 0}, {"used_def": "outer", "source": 21, "target": 49, "key": 0}, {"used_def": "matrix", "source": 41, "target": 63, "key": 0}, {"used_def": "matrix", "source": 41, "target": 69, "key": 0}, {"color": "orange", "source": 41, "target": 75, "key": 0}, {"used_def": "target", "source": 41, "target": 83, "key": 0}, {"used_def": "y", "source": 49, "target": 75, "key": 0}, {"used_def": "y", "source": 49, "target": 79, "key": 0}, {"used_def": "y", "source": 49, "target": 90, "key": 0}, {"used_def": "y", "source": 49, "target": 95, "key": 0}, {"color": "orange", "source": 49, "target": 99, "key": 0}, {"used_def": "x", "source": 49, "target": 103, "key": 0}, {"color": "orange", "source": 49, "target": 107, "key": 0}, {"used_def": "x", "source": 49, "target": 114, "key": 0}, {"used_def": "y", "source": 49, "target": 118, "key": 0}, {"used_def": "x", "source": 49, "target": 122, "key": 0}, {"color": "green", "source": 63, "target": 111, "key": 0}, {"used_def": "x", "source": 79, "target": 103, "key": 0}, {"color": "orange", "source": 79, "target": 107, "key": 0}, {"used_def": "x", "source": 99, "target": 103, "key": 0}, {"color": "orange", "source": 99, "target": 107, "key": 0}, {"used_def": "x", "source": 107, "target": 122, "key": 0}]}