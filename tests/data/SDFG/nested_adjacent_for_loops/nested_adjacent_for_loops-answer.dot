digraph  {
6 [label="1_\ public\ class\ Simple\ ", type_label=class_declaration];
10 [label="2_\ \ static\ void\ Main\ \(string\[\]\ args\)", type_label=method_declaration];
21 [label="3_\ int\ j\ =\ 0\ ;", type_label=local_declaration];
28 [label="4_\ for\ \(\ int\ i=0\ ;\ i<10\ ;\ i\+\+\ \)", type_label=for];
41 [label="5_\ Console\.WriteLine\(j\);", type_label=expression_statement];
49 [label="6_\ for\ \(\ j=0\ ;\ j<10\ ;\ j\+\+\ \)", type_label=for];
60 [label="7_\ Console\.WriteLine\(j\);", type_label=expression_statement];
68 [label="8_\ Console\.WriteLine\(i\);", type_label=expression_statement];
76 [label="9_\ j\+=1;", type_label=expression_statement];
81 [label="10_\ if\ \(\ j\ ==\ 9\ \)", type_label=if];
85 [label="11_\ i\ =\ 999;", type_label=expression_statement];
90 [label="13_\ if\ \(\ i==999\ \)", type_label=if];
95 [label="15_\ Console\.WriteLine\(i\);", type_label=expression_statement];
103 [label="16_\ Console\.WriteLine\(\"o\.O\"\);", type_label=expression_statement];
111 [label="18_\ j\+=1;", type_label=expression_statement];
116 [label="20_\ for\ \(\ int\ i=0\ ;\ i<10\ ;\ i\+\+\ \)", type_label=for];
129 [label="21_\ Console\.WriteLine\(j\);", type_label=expression_statement];
137 [label="22_\ for\ \(\ j=0\ ;\ j<10\ ;\ j\+\+\ \)", type_label=for];
148 [label="23_\ Console\.WriteLine\(j\);", type_label=expression_statement];
156 [label="24_\ Console\.WriteLine\(i\);", type_label=expression_statement];
164 [label="25_\ j\+=1;", type_label=expression_statement];
169 [label="27_\ j\+=1;", type_label=expression_statement];
1 [label="1_\ start_node", type_label=start];
21 -> 28  [key=0, used_def=j];
21 -> 41  [key=0, used_def=j];
21 -> 49  [key=0, used_def=j];
21 -> 116  [key=0, used_def=j];
21 -> 129  [key=0, used_def=j];
21 -> 137  [key=0, used_def=j];
28 -> 28  [key=0, used_def=i];
28 -> 68  [key=0, used_def=i];
28 -> 90  [key=0, used_def=i];
28 -> 95  [key=0, used_def=i];
28 -> 111  [color=green, key=0];
28 -> 169  [color=green, key=0];
41 -> 111  [color=green, key=0];
41 -> 169  [color=green, key=0];
49 -> 49  [key=0, used_def=j];
49 -> 60  [key=0, used_def=j];
49 -> 76  [key=0, used_def=j];
49 -> 111  [color=green, key=0];
49 -> 169  [color=green, key=0];
60 -> 111  [color=green, key=0];
60 -> 169  [color=green, key=0];
76 -> 49  [key=0, used_def=j];
76 -> 81  [key=0, used_def=j];
76 -> 111  [color=green, key=0];
76 -> 169  [color=green, key=0];
81 -> 111  [color=green, key=0];
81 -> 169  [color=green, key=0];
111 -> 28  [key=0, used_def=j];
111 -> 41  [key=0, used_def=j];
111 -> 49  [key=0, used_def=j];
111 -> 169  [color=green, key=0];
116 -> 116  [key=0, used_def=i];
116 -> 156  [key=0, used_def=i];
116 -> 169  [color=green, key=0];
129 -> 169  [color=green, key=0];
137 -> 137  [key=0, used_def=j];
137 -> 148  [key=0, used_def=j];
137 -> 164  [key=0, used_def=j];
137 -> 169  [color=green, key=0];
148 -> 169  [color=green, key=0];
164 -> 169  [color=green, key=0];
169 -> 116  [key=0, used_def=j];
169 -> 129  [key=0, used_def=j];
169 -> 137  [key=0, used_def=j];
}
