digraph  {
6 [label="1_\ public\ class\ Simple\ ", type_label=class_declaration];
10 [label="2_\ \ public\ override\ void\ Decompress\ \(DataInput\ input,\ int\ originalLength,\ int\ offset,\ int\ length,\ BytesRef\ bytes\)", type_label=method_declaration];
32 [label="3_\ Debug\.Assert\(offset\ \+\ length\ <=\ originalLength\);", type_label=expression_statement];
44 [label="4_\ if\ \(\ length\ ==\ 0\ \)", type_label=if];
49 [label="5_\ bytes\.Length\ =\ 0;", type_label=expression_statement];
56 [label="6_\ return;", type_label=expression_statement];
57 [label="8_\ byte\[\]\ compressedBytes\ =\ new\ byte\[input\.ReadVInt32\(\)\]\ ;", type_label=local_declaration];
74 [label="9_\ input\.ReadBytes\(compressedBytes,\ 0,\ compressedBytes\.Length\);", type_label=expression_statement];
88 [label="10_\ byte\[\]\ decompressedBytes\ =\ null\ ;", type_label=local_declaration];
97 [label="11_\ using\ \(\ MemoryStream\ decompressedStream\ =\ new\ MemoryStream\(\)\ \)", type_label=using];
107 [label="12_\ using\ \(\ MemoryStream\ compressedStream\ =\ new\ MemoryStream\(compressedBytes\)\ \)", type_label=using];
119 [label="13_\ using\ \(\ DeflateStream\ dStream\ =\ new\ DeflateStream\(compressedStream,\ System\.IO\.Compression\.CompressionMode\.Decompress\)\ \)", type_label=using];
141 [label="14_\ dStream\.CopyTo\(decompressedStream\);", type_label=expression_statement];
149 [label="17_\ decompressedBytes\ =\ decompressedStream\.ToArray\(\);", type_label=expression_statement];
158 [label="19_\ if\ \(\ decompressedBytes\.Length\ !=\ originalLength\ \)", type_label=if];
165 [label="20_\ throw\ new\ CorruptIndexException\(\"Length\ mismatch:\ \"\ \+\ decompressedBytes\.Length\ \+\ \"\ !=\ \"\ \+\ originalLength\ \+\ \"\ \(resource=\"\ \+\ input\ \+\ \"\)\"\);", type_label=expression_statement];
185 [label="22_\ bytes\.Bytes\ =\ decompressedBytes;", type_label=expression_statement];
192 [label="23_\ bytes\.children\.somethin\(\);", type_label=expression_statement];
200 [label="24_\ bytes\.Bytes\.a\ =\ 3;", type_label=expression_statement];
209 [label="25_\ bytes\.Offset\ =\ offset;", type_label=expression_statement];
216 [label="26_\ bytes\.Length\ =\ length;", type_label=expression_statement];
1 [label="1_\ start_node", type_label=start];
10 -> 32  [key=0, used_def=originalLength];
10 -> 44  [key=0, used_def=length];
10 -> 57  [key=0, used_def=input];
10 -> 158  [key=0, used_def=originalLength];
10 -> 165  [key=0, used_def=originalLength];
10 -> 192  [key=0, used_def="bytes.children"];
10 -> 209  [key=0, used_def=offset];
10 -> 216  [key=0, used_def=length];
57 -> 74  [key=0, used_def=input];
57 -> 107  [key=0, used_def=compressedBytes];
74 -> 158  [key=0, used_def=input];
74 -> 165  [key=0, used_def=input];
88 -> 149  [color=orange, key=0];
97 -> 141  [key=0, used_def=decompressedStream];
97 -> 149  [key=0, used_def=decompressedStream];
107 -> 119  [key=0, used_def=compressedStream];
119 -> 141  [key=0, used_def=dStream];
149 -> 158  [key=0, used_def="decompressedBytes.Length"];
149 -> 165  [key=0, used_def="decompressedBytes.Length"];
}
