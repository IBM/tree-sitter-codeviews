{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"node_type": "program", "label": "program", "code": "public class CFG_test4 {\n    public String generateToken(String code) {\n        try {            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        } catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }    \n    }\n}", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 5}, {"node_type": "identifier", "label": "identifier", "code": "CFG_test4", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 8}, {"node_type": "method_declaration", "label": "method_declaration", "code": "public String generateToken(String code) {\n        try {            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        } catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }    \n    }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 10}, {"node_type": "type_identifier", "label": "type_identifier", "code": "String", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 12}, {"node_type": "identifier", "label": "identifier", "code": "generateToken", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 13}, {"node_type": "formal_parameters", "label": "formal_parameters", "code": "(String code)", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 14}, {"node_type": "formal_parameter", "label": "formal_parameter", "code": "String code", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 15}, {"node_type": "token", "label": "code", "code": "code", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{17, 74}", "node_name": "code", "id": 17}, {"node_type": "block", "label": "block", "code": "{\n        try {            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        } catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }    \n    }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 18}, {"node_type": "try_statement", "label": "try_statement", "code": "try {            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        } catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 19}, {"node_type": "block", "label": "block", "code": "{            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 20}, {"node_type": "local_variable_declaration", "label": "local_variable_declaration", "code": "MessageDigest md = MessageDigest.getInstance(\"SHA1\");", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 21}, {"node_type": "token", "label": "MessageDigest", "code": "MessageDigest", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{22}", "node_name": "MessageDigest", "id": 22}, {"node_type": "variable_declarator", "label": "variable_declarator", "code": "md = MessageDigest.getInstance(\"SHA1\")", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 23}, {"node_type": "token", "label": "md", "code": "md", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{24}", "node_name": "md", "id": 24}, {"node_type": "identifier", "label": "identifier", "code": "getInstance", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 27}, {"node_type": "argument_list", "label": "argument_list", "code": "(\"SHA1\")", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 28}, {"node_type": "token", "label": "\"SHA1\"", "code": "\"SHA1\"", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{29}", "node_name": "\"SHA1\"", "id": 29}, {"node_type": "identifier", "label": "identifier", "code": "update", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 33}, {"node_type": "argument_list", "label": "argument_list", "code": "(code.getBytes())", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 34}, {"node_type": "identifier", "label": "identifier", "code": "getBytes", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 37}, {"node_type": "argument_list", "label": "argument_list", "code": "()", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 38}, {"node_type": "local_variable_declaration", "label": "local_variable_declaration", "code": "byte[] bytes = md.digest();", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 39}, {"node_type": "array_type", "label": "array_type", "code": "byte[]", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 40}, {"node_type": "integral_type", "label": "integral_type", "code": "byte", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 41}, {"node_type": "dimensions", "label": "dimensions", "code": "[]", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 42}, {"node_type": "variable_declarator", "label": "variable_declarator", "code": "bytes = md.digest()", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 43}, {"node_type": "token", "label": "bytes", "code": "bytes", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{44}", "node_name": "bytes", "id": 44}, {"node_type": "identifier", "label": "identifier", "code": "digest", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 47}, {"node_type": "argument_list", "label": "argument_list", "code": "()", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 48}, {"node_type": "throw_statement", "label": "throw_statement", "code": "throw new IllegalStateException(e.getMessage());", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 49}, {"node_type": "object_creation_expression", "label": "object_creation_expression", "code": "new IllegalStateException(e.getMessage())", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 50}, {"node_type": "token", "label": "IllegalStateException", "code": "IllegalStateException", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{51}", "node_name": "IllegalStateException", "id": 51}, {"node_type": "argument_list", "label": "argument_list", "code": "(e.getMessage())", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 52}, {"node_type": "identifier", "label": "identifier", "code": "e", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 54}, {"node_type": "identifier", "label": "identifier", "code": "getMessage", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 55}, {"node_type": "argument_list", "label": "argument_list", "code": "()", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 56}, {"node_type": "catch_clause", "label": "catch_clause", "code": "catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 57}, {"node_type": "catch_formal_parameter", "label": "catch_formal_parameter", "code": "NoSuchAlgorithmException e", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 58}, {"node_type": "catch_type", "label": "catch_type", "code": "NoSuchAlgorithmException", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 59}, {"node_type": "block", "label": "block", "code": "{ \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 62}, {"node_type": "try_statement", "label": "try_statement", "code": "try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 63}, {"node_type": "block", "label": "block", "code": "{\n                System.out.println(\"Failed to generate token: \" + code);\n            }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 64}, {"node_type": "field_access", "label": "field_access", "code": "System.out", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 67}, {"node_type": "identifier", "label": "identifier", "code": "System", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 68}, {"node_type": "identifier", "label": "identifier", "code": "out", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 69}, {"node_type": "identifier", "label": "identifier", "code": "println", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 70}, {"node_type": "argument_list", "label": "argument_list", "code": "(\"Failed to generate token: \" + code)", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 71}, {"node_type": "binary_expression", "label": "binary_expression", "code": "\"Failed to generate token: \" + code", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 72}, {"node_type": "token", "label": "\"Failed to generate token: \"", "code": "\"Failed to generate token: \"", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{73}", "node_name": "\"Failed to generate token: \"", "id": 73}, {"node_type": "catch_clause", "label": "catch_clause", "code": "catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 75}, {"node_type": "catch_formal_parameter", "label": "catch_formal_parameter", "code": "NoSuchAlgorithmException e2", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 76}, {"node_type": "token", "label": "e2", "code": "e2", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{79}", "node_name": "e2", "id": 79}, {"node_type": "block", "label": "block", "code": "{\n                throw new RuntimeException(\"SHA1 missing\");\n            }", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 80}, {"node_type": "throw_statement", "label": "throw_statement", "code": "throw new RuntimeException(\"SHA1 missing\");", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 81}, {"node_type": "object_creation_expression", "label": "object_creation_expression", "code": "new RuntimeException(\"SHA1 missing\")", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 82}, {"node_type": "token", "label": "RuntimeException", "code": "RuntimeException", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{83}", "node_name": "RuntimeException", "id": 83}, {"node_type": "argument_list", "label": "argument_list", "code": "(\"SHA1 missing\")", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "id": 84}, {"node_type": "token", "label": "\"SHA1 missing\"", "code": "\"SHA1 missing\"", "shape": "box", "style": "rounded, filled", "fillcolor": "#BFE6D3", "color": "white", "node_composition": "{85}", "node_name": "\"SHA1 missing\"", "id": 85}, {"node_composition": "{16}", "node_name": "String", "node_type": "token", "label": "String", "id": 16}, {"node_composition": "{60, 78}", "node_name": "NoSuchAlgorithmException", "node_type": "token", "label": "NoSuchAlgorithmException", "id": 60}, {"node_composition": "{61}", "node_name": "e", "node_type": "token", "label": "e", "id": 61}], "links": [{"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 5, "target": 8, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 5, "target": 10, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 10, "target": 12, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 10, "target": 13, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 10, "target": 14, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 10, "target": 18, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 14, "target": 15, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 15, "target": 17, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 15, "target": 12, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 18, "target": 19, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 19, "target": 20, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 19, "target": 57, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 20, "target": 21, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 20, "target": 39, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 20, "target": 49, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 20, "target": 33, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 20, "target": 34, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 20, "target": 24, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 21, "target": 22, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 21, "target": 23, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 23, "target": 24, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 23, "target": 27, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 23, "target": 28, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 23, "target": 22, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 28, "target": 29, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 34, "target": 37, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 34, "target": 38, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 34, "target": 17, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 39, "target": 40, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 39, "target": 43, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 40, "target": 41, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 40, "target": 42, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 43, "target": 44, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 43, "target": 47, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 43, "target": 48, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 43, "target": 24, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 49, "target": 50, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 50, "target": 51, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 50, "target": 52, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 52, "target": 54, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 52, "target": 55, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 52, "target": 56, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 57, "target": 58, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 57, "target": 62, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 58, "target": 59, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 58, "target": 54, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 59, "target": 59, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 59, "target": 59, "key": 1}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 62, "target": 63, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 63, "target": 64, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 63, "target": 75, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 64, "target": 67, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 64, "target": 70, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 64, "target": 71, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 67, "target": 68, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 67, "target": 69, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 71, "target": 72, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 72, "target": 73, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 72, "target": 17, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 75, "target": 76, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 75, "target": 80, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 76, "target": 79, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 76, "target": 59, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 80, "target": 81, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 81, "target": 82, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 82, "target": 83, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 82, "target": 84, "key": 0}, {"edge_type": "AST_edge", "color": "indigo", "shape": "vee", "source": 84, "target": 85, "key": 0}]}