{"directed": true, "multigraph": true, "graph": {}, "nodes": [{"line_number": 2, "node_type": "method_declaration", "label": "onCreate(Bundle savedInstanceState)", "id": 10}, {"line_number": 3, "node_type": "expression_statement", "label": "super.onCreate(savedInstanceState);", "id": 21}, {"line_number": 4, "node_type": "expression_statement", "label": "TextView tv = new TextView(this);", "id": 27}, {"line_number": 5, "node_type": "expression_statement", "label": "HttpClient client = new DefaultHttpClient();", "id": 35}, {"line_number": 6, "node_type": "expression_statement", "label": "HttpGet httpGetRequest = new HttpGet(\"http://www.google.com/\");", "id": 42}, {"line_number": 7, "node_type": "expression_statement", "label": "String line = \"\", responseString = \"\";", "id": 50}, {"line_number": 8, "node_type": "try", "label": "try", "id": 58}, {"line_number": 9, "node_type": "expression_statement", "label": "HttpResponse response = client.execute(httpGetRequest);", "id": 60}, {"line_number": 10, "node_type": "if", "label": "if(response.getStatusLine().getStatusCode() == HttpStatus.SC_OK)", "id": 69}, {"line_number": 11, "node_type": "expression_statement", "label": "BufferedReader br = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));", "id": 83}, {"line_number": 12, "node_type": "while", "label": "while((line = br.readLine()) != null)", "id": 100}, {"line_number": 13, "node_type": "expression_statement", "label": "responseString += line;", "id": 112}, {"line_number": 15, "node_type": "expression_statement", "label": "br.close();", "id": 116}, {"line_number": 17, "node_type": "catch", "label": "catch (ClientProtocolException e)", "id": 121}, {"line_number": 18, "node_type": "expression_statement", "label": "e.printStackTrace();", "id": 127}, {"line_number": 19, "node_type": "catch", "label": "catch (IOException e)", "id": 132}, {"line_number": 20, "node_type": "expression_statement", "label": "e.printStackTrace();", "id": 138}, {"line_number": 22, "node_type": "expression_statement", "label": "tv.setText(responseString);", "id": 143}, {"line_number": 23, "node_type": "expression_statement", "label": "setContentView(tv);", "id": 149}], "links": [{"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 10, "target": 21, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 27, "target": 27, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 27, "target": 143, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 27, "target": 149, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 35, "target": 35, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 35, "target": 60, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 42, "target": 42, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 42, "target": 60, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 50, "target": 50, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 50, "target": 143, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 60, "target": 60, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 60, "target": 69, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 60, "target": 83, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 83, "target": 83, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 83, "target": 100, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 83, "target": 116, "key": 0}, {"dataflow_type": "computedFrom", "edge_type": "computedFrom", "source": 100, "target": 100, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 100, "target": 112, "key": 0}, {"dataflow_type": "computedFrom", "edge_type": "computedFrom", "source": 112, "target": 112, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 112, "target": 143, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 121, "target": 127, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 121, "target": 132, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 121, "target": 138, "key": 0}, {"dataflow_type": "comesFrom", "edge_type": "comesFrom", "source": 127, "target": 138, "key": 0}]}