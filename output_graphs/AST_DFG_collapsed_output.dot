digraph  {
5 [code="public class CFG_test4 {\n    public String generateToken(String code) {\n        try {            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        } catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }    \n    }\n}", color=white, fillcolor="#BFE6D3", label=program, node_type=program, shape=box, style="rounded, filled"];
8 [code=CFG_test4, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
10 [code="public String generateToken(String code) {\n        try {            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        } catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }    \n    }", color=white, fillcolor="#BFE6D3", label=method_declaration, node_type=method_declaration, shape=box, style="rounded, filled"];
12 [code=String, color=white, fillcolor="#BFE6D3", label=type_identifier, node_type=type_identifier, shape=box, style="rounded, filled"];
13 [code=generateToken, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
14 [code="(String code)", color=white, fillcolor="#BFE6D3", label=formal_parameters, node_type=formal_parameters, shape=box, style="rounded, filled"];
15 [code="String code", color=white, fillcolor="#BFE6D3", label=formal_parameter, node_type=formal_parameter, shape=box, style="rounded, filled"];
17 [code=code, color=white, fillcolor="#BFE6D3", label=code, node_composition="{17, 74}", node_name=code, node_type=token, shape=box, style="rounded, filled"];
18 [code="{\n        try {            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        } catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }    \n    }", color=white, fillcolor="#BFE6D3", label=block, node_type=block, shape=box, style="rounded, filled"];
19 [code="try {            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        } catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }", color=white, fillcolor="#BFE6D3", label=try_statement, node_type=try_statement, shape=box, style="rounded, filled"];
20 [code="{            \n            MessageDigest md = MessageDigest.getInstance(\"SHA1\");            \n            md.update(code.getBytes());            \n            byte[] bytes = md.digest();            \n            throw new IllegalStateException(e.getMessage());      \n        }", color=white, fillcolor="#BFE6D3", label=block, node_type=block, shape=box, style="rounded, filled"];
21 [code="MessageDigest md = MessageDigest.getInstance(\"SHA1\");", color=white, fillcolor="#BFE6D3", label=local_variable_declaration, node_type=local_variable_declaration, shape=box, style="rounded, filled"];
22 [code=MessageDigest, color=white, fillcolor="#BFE6D3", label=MessageDigest, node_composition="{22}", node_name=MessageDigest, node_type=token, shape=box, style="rounded, filled"];
23 [code="md = MessageDigest.getInstance(\"SHA1\")", color=white, fillcolor="#BFE6D3", label=variable_declarator, node_type=variable_declarator, shape=box, style="rounded, filled"];
24 [code=md, color=white, fillcolor="#BFE6D3", label=md, node_composition="{24}", node_name=md, node_type=token, shape=box, style="rounded, filled"];
27 [code=getInstance, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
28 [code="(\"SHA1\")", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
29 [code="SHA1", color=white, fillcolor="#BFE6D3", label="SHA1", node_composition="{29}", node_name="SHA1", node_type=token, shape=box, style="rounded, filled"];
33 [code=update, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
34 [code="(code.getBytes())", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
37 [code=getBytes, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
38 [code="()", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
39 [code="byte[] bytes = md.digest();", color=white, fillcolor="#BFE6D3", label=local_variable_declaration, node_type=local_variable_declaration, shape=box, style="rounded, filled"];
40 [code="byte[]", color=white, fillcolor="#BFE6D3", label=array_type, node_type=array_type, shape=box, style="rounded, filled"];
41 [code=byte, color=white, fillcolor="#BFE6D3", label=integral_type, node_type=integral_type, shape=box, style="rounded, filled"];
42 [code="[]", color=white, fillcolor="#BFE6D3", label=dimensions, node_type=dimensions, shape=box, style="rounded, filled"];
43 [code="bytes = md.digest()", color=white, fillcolor="#BFE6D3", label=variable_declarator, node_type=variable_declarator, shape=box, style="rounded, filled"];
44 [code=bytes, color=white, fillcolor="#BFE6D3", label=bytes, node_composition="{44}", node_name=bytes, node_type=token, shape=box, style="rounded, filled"];
47 [code=digest, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
48 [code="()", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
49 [code="throw new IllegalStateException(e.getMessage());", color=white, fillcolor="#BFE6D3", label=throw_statement, node_type=throw_statement, shape=box, style="rounded, filled"];
50 [code="new IllegalStateException(e.getMessage())", color=white, fillcolor="#BFE6D3", label=object_creation_expression, node_type=object_creation_expression, shape=box, style="rounded, filled"];
51 [code=IllegalStateException, color=white, fillcolor="#BFE6D3", label=IllegalStateException, node_composition="{51}", node_name=IllegalStateException, node_type=token, shape=box, style="rounded, filled"];
52 [code="(e.getMessage())", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
54 [code=e, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
55 [code=getMessage, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
56 [code="()", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
57 [code="catch (NoSuchAlgorithmException e) { \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }", color=white, fillcolor="#BFE6D3", label=catch_clause, node_type=catch_clause, shape=box, style="rounded, filled"];
58 [code="NoSuchAlgorithmException e", color=white, fillcolor="#BFE6D3", label=catch_formal_parameter, node_type=catch_formal_parameter, shape=box, style="rounded, filled"];
59 [code=NoSuchAlgorithmException, color=white, fillcolor="#BFE6D3", label=catch_type, node_type=catch_type, shape=box, style="rounded, filled"];
62 [code="{ \n            try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }   \n        }", color=white, fillcolor="#BFE6D3", label=block, node_type=block, shape=box, style="rounded, filled"];
63 [code="try {\n                System.out.println(\"Failed to generate token: \" + code);\n            }\n            catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }", color=white, fillcolor="#BFE6D3", label=try_statement, node_type=try_statement, shape=box, style="rounded, filled"];
64 [code="{\n                System.out.println(\"Failed to generate token: \" + code);\n            }", color=white, fillcolor="#BFE6D3", label=block, node_type=block, shape=box, style="rounded, filled"];
67 [code="System.out", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
68 [code=System, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
69 [code=out, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
70 [code=println, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
71 [code="(\"Failed to generate token: \" + code)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
72 [code="\"Failed to generate token: \" + code", color=white, fillcolor="#BFE6D3", label=binary_expression, node_type=binary_expression, shape=box, style="rounded, filled"];
73 [code="Failed to generate token: ", color=white, fillcolor="#BFE6D3", label="Failed to generate token: ", node_composition="{73}", node_name="Failed to generate token: ", node_type=token, shape=box, style="rounded, filled"];
75 [code="catch (NoSuchAlgorithmException e2) {\n                throw new RuntimeException(\"SHA1 missing\");\n            }", color=white, fillcolor="#BFE6D3", label=catch_clause, node_type=catch_clause, shape=box, style="rounded, filled"];
76 [code="NoSuchAlgorithmException e2", color=white, fillcolor="#BFE6D3", label=catch_formal_parameter, node_type=catch_formal_parameter, shape=box, style="rounded, filled"];
79 [code=e2, color=white, fillcolor="#BFE6D3", label=e2, node_composition="{79}", node_name=e2, node_type=token, shape=box, style="rounded, filled"];
80 [code="{\n                throw new RuntimeException(\"SHA1 missing\");\n            }", color=white, fillcolor="#BFE6D3", label=block, node_type=block, shape=box, style="rounded, filled"];
81 [code="throw new RuntimeException(\"SHA1 missing\");", color=white, fillcolor="#BFE6D3", label=throw_statement, node_type=throw_statement, shape=box, style="rounded, filled"];
82 [code="new RuntimeException(\"SHA1 missing\")", color=white, fillcolor="#BFE6D3", label=object_creation_expression, node_type=object_creation_expression, shape=box, style="rounded, filled"];
83 [code=RuntimeException, color=white, fillcolor="#BFE6D3", label=RuntimeException, node_composition="{83}", node_name=RuntimeException, node_type=token, shape=box, style="rounded, filled"];
84 [code="(\"SHA1 missing\")", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
85 [code="SHA1 missing", color=white, fillcolor="#BFE6D3", label="SHA1 missing", node_composition="{85}", node_name="SHA1 missing", node_type=token, shape=box, style="rounded, filled"];
16 [label=String, node_composition="{16}", node_name=String, node_type=token];
60 [label=NoSuchAlgorithmException, node_composition="{60, 78}", node_name=NoSuchAlgorithmException, node_type=token];
61 [label=e, node_composition="{61}", node_name=e, node_type=token];
5 -> 8  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
5 -> 10  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 12  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 13  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 14  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 18  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
14 -> 15  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 17  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 12  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
18 -> 19  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 20  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 57  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 21  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 39  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 49  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 33  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 34  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 24  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
21 -> 22  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
21 -> 23  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
23 -> 24  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
23 -> 27  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
23 -> 28  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
23 -> 22  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
28 -> 29  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
34 -> 37  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
34 -> 38  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
34 -> 17  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
39 -> 40  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
39 -> 43  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
40 -> 41  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
40 -> 42  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
43 -> 44  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
43 -> 47  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
43 -> 48  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
43 -> 24  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
49 -> 50  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
50 -> 51  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
50 -> 52  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
52 -> 54  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
52 -> 55  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
52 -> 56  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
57 -> 58  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
57 -> 62  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
58 -> 59  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
58 -> 54  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
59 -> 59  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
59 -> 59  [color=indigo, edge_type=AST_edge, key=1, shape=vee];
62 -> 63  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
63 -> 64  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
63 -> 75  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
64 -> 67  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
64 -> 70  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
64 -> 71  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
67 -> 68  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
67 -> 69  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
71 -> 72  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
72 -> 73  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
72 -> 17  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
75 -> 76  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
75 -> 80  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
76 -> 79  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
76 -> 59  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
80 -> 81  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
81 -> 82  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
82 -> 83  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
82 -> 84  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
84 -> 85  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
}
