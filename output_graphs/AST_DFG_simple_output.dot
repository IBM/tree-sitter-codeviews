digraph  {
5 [code="public class Graph {\n    public static void main(String args[]) {\n        int d = 0;\n        int y = d;\n        t.l1.d.e = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,e.r.d);\n        System.out.println(c + \"Happy all the time\");\n    }\n}", color=white, fillcolor="#BFE6D3", label=program, node_type=program, shape=box, style="rounded, filled"];
6 [code="public class Graph {\n    public static void main(String args[]) {\n        int d = 0;\n        int y = d;\n        t.l1.d.e = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,e.r.d);\n        System.out.println(c + \"Happy all the time\");\n    }\n}", color=white, fillcolor="#BFE6D3", label=class_declaration, node_type=class_declaration, shape=box, style="rounded, filled"];
7 [code=public, color=white, fillcolor="#BFE6D3", label=modifiers, node_type=modifiers, shape=box, style="rounded, filled"];
8 [code=Graph, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
9 [code="{\n    public static void main(String args[]) {\n        int d = 0;\n        int y = d;\n        t.l1.d.e = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,e.r.d);\n        System.out.println(c + \"Happy all the time\");\n    }\n}", color=white, fillcolor="#BFE6D3", label=class_body, node_type=class_body, shape=box, style="rounded, filled"];
10 [code="public static void main(String args[]) {\n        int d = 0;\n        int y = d;\n        t.l1.d.e = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,e.r.d);\n        System.out.println(c + \"Happy all the time\");\n    }", color=white, fillcolor="#BFE6D3", label=method_declaration, node_type=method_declaration, shape=box, style="rounded, filled"];
11 [code="public static", color=white, fillcolor="#BFE6D3", label=modifiers, node_type=modifiers, shape=box, style="rounded, filled"];
12 [code=void, color=white, fillcolor="#BFE6D3", label=void_type, node_type=void_type, shape=box, style="rounded, filled"];
13 [code=main, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
14 [code="(String args[])", color=white, fillcolor="#BFE6D3", label=formal_parameters, node_type=formal_parameters, shape=box, style="rounded, filled"];
15 [code="String args[]", color=white, fillcolor="#BFE6D3", label=formal_parameter, node_type=formal_parameter, shape=box, style="rounded, filled"];
16 [code=String, color=white, fillcolor="#BFE6D3", label=String, node_name=String, node_type=identifier, shape=box, style="rounded, filled"];
17 [code=args, color=white, fillcolor="#BFE6D3", label=args, node_name=args, node_type=identifier, shape=box, style="rounded, filled"];
18 [code="[]", color=white, fillcolor="#BFE6D3", label=dimensions, node_type=dimensions, shape=box, style="rounded, filled"];
19 [code="{\n        int d = 0;\n        int y = d;\n        t.l1.d.e = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,e.r.d);\n        System.out.println(c + \"Happy all the time\");\n    }", color=white, fillcolor="#BFE6D3", label=block, node_type=block, shape=box, style="rounded, filled"];
20 [code="int d = 0;", color=white, fillcolor="#BFE6D3", label=local_variable_declaration, node_type=local_variable_declaration, shape=box, style="rounded, filled"];
21 [code=int, color=white, fillcolor="#BFE6D3", label=integral_type, node_type=integral_type, shape=box, style="rounded, filled"];
22 [code="d = 0", color=white, fillcolor="#BFE6D3", label=variable_declarator, node_type=variable_declarator, shape=box, style="rounded, filled"];
23 [code=d, color=white, fillcolor="#BFE6D3", label=d, node_name=d, node_type=identifier, shape=box, style="rounded, filled"];
24 [code=0, color=white, fillcolor="#BFE6D3", label=0, node_name=0, node_type=identifier, shape=box, style="rounded, filled"];
25 [code="int y = d;", color=white, fillcolor="#BFE6D3", label=local_variable_declaration, node_type=local_variable_declaration, shape=box, style="rounded, filled"];
26 [code=int, color=white, fillcolor="#BFE6D3", label=integral_type, node_type=integral_type, shape=box, style="rounded, filled"];
27 [code="y = d", color=white, fillcolor="#BFE6D3", label=variable_declarator, node_type=variable_declarator, shape=box, style="rounded, filled"];
28 [code=y, color=white, fillcolor="#BFE6D3", label=y, node_name=y, node_type=identifier, shape=box, style="rounded, filled"];
29 [code=d, color=white, fillcolor="#BFE6D3", label=d, node_name=d, node_type=identifier, shape=box, style="rounded, filled"];
30 [code="t.l1.d.e = g.l1.main(1,2);", color=white, fillcolor="#BFE6D3", label=expression_statement, node_type=expression_statement, shape=box, style="rounded, filled"];
31 [code="t.l1.d.e = g.l1.main(1,2)", color=white, fillcolor="#BFE6D3", label=assignment_expression, node_type=assignment_expression, shape=box, style="rounded, filled"];
32 [code="t.l1.d.e", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
33 [code="t.l1.d", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
34 [code="t.l1", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
35 [code=t, color=white, fillcolor="#BFE6D3", label="t.l1.d.e", node_name=t, node_type=identifier, shape=box, style="rounded, filled"];
36 [code=l1, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
37 [code=d, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
38 [code=e, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
39 [code="g.l1.main(1,2)", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
40 [code="g.l1", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
41 [code=g, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
42 [code=l1, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
43 [code=main, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
44 [code="(1,2)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
45 [code=1, color=white, fillcolor="#BFE6D3", label=1, node_name=1, node_type=identifier, shape=box, style="rounded, filled"];
46 [code=2, color=white, fillcolor="#BFE6D3", label=2, node_name=2, node_type=identifier, shape=box, style="rounded, filled"];
47 [code="int y = add(3,add(y,d));", color=white, fillcolor="#BFE6D3", label=local_variable_declaration, node_type=local_variable_declaration, shape=box, style="rounded, filled"];
48 [code=int, color=white, fillcolor="#BFE6D3", label=integral_type, node_type=integral_type, shape=box, style="rounded, filled"];
49 [code="y = add(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=variable_declarator, node_type=variable_declarator, shape=box, style="rounded, filled"];
50 [code=y, color=white, fillcolor="#BFE6D3", label=y, node_name=y, node_type=identifier, shape=box, style="rounded, filled"];
51 [code="add(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
52 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
53 [code="(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
54 [code=3, color=white, fillcolor="#BFE6D3", label=3, node_name=3, node_type=identifier, shape=box, style="rounded, filled"];
55 [code="add(y,d)", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
56 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
57 [code="(y,d)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
58 [code=y, color=white, fillcolor="#BFE6D3", label=y, node_name=y, node_type=identifier, shape=box, style="rounded, filled"];
59 [code=d, color=white, fillcolor="#BFE6D3", label=d, node_name=d, node_type=identifier, shape=box, style="rounded, filled"];
60 [code="System.out.print(add(3,add(y,d)));", color=white, fillcolor="#BFE6D3", label=expression_statement, node_type=expression_statement, shape=box, style="rounded, filled"];
61 [code="System.out.print(add(3,add(y,d)))", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
62 [code="System.out", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
63 [code=System, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
64 [code=out, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
65 [code=print, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
66 [code="(add(3,add(y,d)))", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
67 [code="add(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
68 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
69 [code="(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
70 [code=3, color=white, fillcolor="#BFE6D3", label=3, node_name=3, node_type=identifier, shape=box, style="rounded, filled"];
71 [code="add(y,d)", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
72 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
73 [code="(y,d)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
74 [code=y, color=white, fillcolor="#BFE6D3", label=y, node_name=y, node_type=identifier, shape=box, style="rounded, filled"];
75 [code=d, color=white, fillcolor="#BFE6D3", label=d, node_name=d, node_type=identifier, shape=box, style="rounded, filled"];
76 [code="s = add(5,e.r.d);", color=white, fillcolor="#BFE6D3", label=expression_statement, node_type=expression_statement, shape=box, style="rounded, filled"];
77 [code="s = add(5,e.r.d)", color=white, fillcolor="#BFE6D3", label=assignment_expression, node_type=assignment_expression, shape=box, style="rounded, filled"];
78 [code=s, color=white, fillcolor="#BFE6D3", label=s, node_name=s, node_type=identifier, shape=box, style="rounded, filled"];
79 [code="add(5,e.r.d)", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
80 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
81 [code="(5,e.r.d)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
82 [code=5, color=white, fillcolor="#BFE6D3", label=5, node_name=5, node_type=identifier, shape=box, style="rounded, filled"];
83 [code="e.r.d", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
84 [code="e.r", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
85 [code=e, color=white, fillcolor="#BFE6D3", label="e.r.d", node_name=e, node_type=identifier, shape=box, style="rounded, filled"];
86 [code=r, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
87 [code=d, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
88 [code="System.out.println(c + \"Happy all the time\");", color=white, fillcolor="#BFE6D3", label=expression_statement, node_type=expression_statement, shape=box, style="rounded, filled"];
89 [code="System.out.println(c + \"Happy all the time\")", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
90 [code="System.out", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
91 [code=System, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
92 [code=out, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
93 [code=println, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
94 [code="(c + \"Happy all the time\")", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
95 [code="c + \"Happy all the time\"", color=white, fillcolor="#BFE6D3", label=binary_expression, node_type=binary_expression, shape=box, style="rounded, filled"];
96 [code=c, color=white, fillcolor="#BFE6D3", label=c, node_name=c, node_type=identifier, shape=box, style="rounded, filled"];
97 [code="Happy all the time", color=white, fillcolor="#BFE6D3", label="Happy all the time", node_name="Happy all the time", node_type=identifier, shape=box, style="rounded, filled"];
5 -> 6  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
6 -> 7  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
6 -> 8  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
6 -> 9  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
9 -> 10  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 11  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 12  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 13  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 14  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 19  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
14 -> 15  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 16  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 17  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 18  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 20  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 25  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 30  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 47  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 60  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 76  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 88  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 21  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 22  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
22 -> 23  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
22 -> 24  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
23 -> 29  [color="#00A3FF", dataflow_type=comesFrom, edge_type=DFG_edge, key=0];
24 -> 23  [color="#00A3FF", dataflow_type=comesFrom, edge_type=DFG_edge, key=0];
25 -> 26  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
25 -> 27  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
27 -> 28  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
27 -> 29  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
28 -> 58  [color="#00A3FF", dataflow_type=comesFrom, edge_type=DFG_edge, key=0];
29 -> 28  [color="#00A3FF", dataflow_type=comesFrom, edge_type=DFG_edge, key=0];
30 -> 31  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
31 -> 32  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
31 -> 39  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
32 -> 33  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
32 -> 38  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
33 -> 34  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
33 -> 37  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
34 -> 35  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
34 -> 36  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
39 -> 40  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
39 -> 43  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
39 -> 44  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
40 -> 41  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
40 -> 42  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
44 -> 45  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
44 -> 46  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
45 -> 35  [color="#00A3FF", dataflow_type=computedFrom, edge_type=DFG_edge, key=0];
46 -> 35  [color="#00A3FF", dataflow_type=computedFrom, edge_type=DFG_edge, key=0];
47 -> 48  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
47 -> 49  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
49 -> 50  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
49 -> 51  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
50 -> 74  [color="#00A3FF", dataflow_type=comesFrom, edge_type=DFG_edge, key=0];
51 -> 52  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
51 -> 53  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
53 -> 54  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
53 -> 55  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
54 -> 50  [color="#00A3FF", dataflow_type=comesFrom, edge_type=DFG_edge, key=0];
55 -> 56  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
55 -> 57  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
57 -> 58  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
57 -> 59  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
58 -> 50  [color="#00A3FF", dataflow_type=comesFrom, edge_type=DFG_edge, key=0];
59 -> 50  [color="#00A3FF", dataflow_type=comesFrom, edge_type=DFG_edge, key=0];
60 -> 61  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
61 -> 62  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
61 -> 65  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
61 -> 66  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
62 -> 63  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
62 -> 64  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
66 -> 67  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
67 -> 68  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
67 -> 69  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
69 -> 70  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
69 -> 71  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
71 -> 72  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
71 -> 73  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
73 -> 74  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
73 -> 75  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
76 -> 77  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
77 -> 78  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
77 -> 79  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
79 -> 80  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
79 -> 81  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
81 -> 82  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
81 -> 83  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
82 -> 78  [color="#00A3FF", dataflow_type=computedFrom, edge_type=DFG_edge, key=0];
83 -> 84  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
83 -> 87  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
84 -> 85  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
84 -> 86  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
85 -> 78  [color="#00A3FF", dataflow_type=computedFrom, edge_type=DFG_edge, key=0];
88 -> 89  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
89 -> 90  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
89 -> 93  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
89 -> 94  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 91  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
90 -> 92  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
94 -> 95  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
95 -> 96  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
95 -> 97  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
}
