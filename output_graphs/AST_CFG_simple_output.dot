digraph  {
5 [code="public class Graph {\n    public static void main(String args[]) {\n        int d = 0;\n        int y = d;\n        t.l1 = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,4);\n        System.out.println(c + \"Happy all the time\");\n    }\n}", color=white, fillcolor="#BFE6D3", label=program, node_type=program, shape=box, style="rounded, filled"];
6 [code="public class Graph {\n    public static void main(String args[]) {\n        int d = 0;\n        int y = d;\n        t.l1 = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,4);\n        System.out.println(c + \"Happy all the time\");\n    }\n}", color=white, fillcolor="#BFE6D3", label=class_declaration, node_type=class_declaration, shape=box, style="rounded, filled"];
7 [code=public, color=white, fillcolor="#BFE6D3", label=modifiers, node_type=modifiers, shape=box, style="rounded, filled"];
8 [code=Graph, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
9 [code="{\n    public static void main(String args[]) {\n        int d = 0;\n        int y = d;\n        t.l1 = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,4);\n        System.out.println(c + \"Happy all the time\");\n    }\n}", color=white, fillcolor="#BFE6D3", label=class_body, node_type=class_body, shape=box, style="rounded, filled"];
10 [code="public static void main(String args[]) {\n        int d = 0;\n        int y = d;\n        t.l1 = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,4);\n        System.out.println(c + \"Happy all the time\");\n    }", color=white, fillcolor="#BFE6D3", label="1_ main(String args[])", node_type=method_declaration, shape=box, style="rounded, filled"];
11 [code="public static", color=white, fillcolor="#BFE6D3", label=modifiers, node_type=modifiers, shape=box, style="rounded, filled"];
12 [code=void, color=white, fillcolor="#BFE6D3", label=void_type, node_type=void_type, shape=box, style="rounded, filled"];
13 [code=main, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
14 [code="(String args[])", color=white, fillcolor="#BFE6D3", label=formal_parameters, node_type=formal_parameters, shape=box, style="rounded, filled"];
15 [code="String args[]", color=white, fillcolor="#BFE6D3", label=formal_parameter, node_type=formal_parameter, shape=box, style="rounded, filled"];
16 [code=String, color=white, fillcolor="#BFE6D3", label=type_identifier, node_type=type_identifier, shape=box, style="rounded, filled"];
17 [code=args, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
18 [code="[]", color=white, fillcolor="#BFE6D3", label=dimensions, node_type=dimensions, shape=box, style="rounded, filled"];
19 [code="{\n        int d = 0;\n        int y = d;\n        t.l1 = g.l1.main(1,2);\n        int y = add(3,add(y,d));\n        System.out.print(add(3,add(y,d)));\n        s = add(5,4);\n        System.out.println(c + \"Happy all the time\");\n    }", color=white, fillcolor="#BFE6D3", label=block, node_type=block, shape=box, style="rounded, filled"];
20 [code="int d = 0;", color=white, fillcolor="#BFE6D3", label="2_ int d = 0;", node_type=local_variable_declaration, shape=box, style="rounded, filled"];
21 [code=int, color=white, fillcolor="#BFE6D3", label=integral_type, node_type=integral_type, shape=box, style="rounded, filled"];
22 [code="d = 0", color=white, fillcolor="#BFE6D3", label=variable_declarator, node_type=variable_declarator, shape=box, style="rounded, filled"];
23 [code=d, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
24 [code=0, color=white, fillcolor="#BFE6D3", label=decimal_integer_literal, node_type=decimal_integer_literal, shape=box, style="rounded, filled"];
25 [code="int y = d;", color=white, fillcolor="#BFE6D3", label="3_ int y = d;", node_type=local_variable_declaration, shape=box, style="rounded, filled"];
26 [code=int, color=white, fillcolor="#BFE6D3", label=integral_type, node_type=integral_type, shape=box, style="rounded, filled"];
27 [code="y = d", color=white, fillcolor="#BFE6D3", label=variable_declarator, node_type=variable_declarator, shape=box, style="rounded, filled"];
28 [code=y, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
29 [code=d, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
30 [code="t.l1 = g.l1.main(1,2);", color=white, fillcolor="#BFE6D3", label="4_ t.l1 = g.l1.main(1,2);", node_type=expression_statement, shape=box, style="rounded, filled"];
31 [code="t.l1 = g.l1.main(1,2)", color=white, fillcolor="#BFE6D3", label=assignment_expression, node_type=assignment_expression, shape=box, style="rounded, filled"];
32 [code="t.l1", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
33 [code=t, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
34 [code=l1, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
35 [code="g.l1.main(1,2)", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
36 [code="g.l1", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
37 [code=g, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
38 [code=l1, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
39 [code=main, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
40 [code="(1,2)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
41 [code=1, color=white, fillcolor="#BFE6D3", label=decimal_integer_literal, node_type=decimal_integer_literal, shape=box, style="rounded, filled"];
42 [code=2, color=white, fillcolor="#BFE6D3", label=decimal_integer_literal, node_type=decimal_integer_literal, shape=box, style="rounded, filled"];
43 [code="int y = add(3,add(y,d));", color=white, fillcolor="#BFE6D3", label="5_ int y = add(3,add(y,d));", node_type=local_variable_declaration, shape=box, style="rounded, filled"];
44 [code=int, color=white, fillcolor="#BFE6D3", label=integral_type, node_type=integral_type, shape=box, style="rounded, filled"];
45 [code="y = add(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=variable_declarator, node_type=variable_declarator, shape=box, style="rounded, filled"];
46 [code=y, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
47 [code="add(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
48 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
49 [code="(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
50 [code=3, color=white, fillcolor="#BFE6D3", label=decimal_integer_literal, node_type=decimal_integer_literal, shape=box, style="rounded, filled"];
51 [code="add(y,d)", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
52 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
53 [code="(y,d)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
54 [code=y, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
55 [code=d, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
56 [code="System.out.print(add(3,add(y,d)));", color=white, fillcolor="#BFE6D3", label="6_ System.out.print(add(3,add(y,d)));", node_type=expression_statement, shape=box, style="rounded, filled"];
57 [code="System.out.print(add(3,add(y,d)))", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
58 [code="System.out", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
59 [code=System, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
60 [code=out, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
61 [code=print, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
62 [code="(add(3,add(y,d)))", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
63 [code="add(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
64 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
65 [code="(3,add(y,d))", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
66 [code=3, color=white, fillcolor="#BFE6D3", label=decimal_integer_literal, node_type=decimal_integer_literal, shape=box, style="rounded, filled"];
67 [code="add(y,d)", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
68 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
69 [code="(y,d)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
70 [code=y, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
71 [code=d, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
72 [code="s = add(5,4);", color=white, fillcolor="#BFE6D3", label="7_ s = add(5,4);", node_type=expression_statement, shape=box, style="rounded, filled"];
73 [code="s = add(5,4)", color=white, fillcolor="#BFE6D3", label=assignment_expression, node_type=assignment_expression, shape=box, style="rounded, filled"];
74 [code=s, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
75 [code="add(5,4)", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
76 [code=add, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
77 [code="(5,4)", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
78 [code=5, color=white, fillcolor="#BFE6D3", label=decimal_integer_literal, node_type=decimal_integer_literal, shape=box, style="rounded, filled"];
79 [code=4, color=white, fillcolor="#BFE6D3", label=decimal_integer_literal, node_type=decimal_integer_literal, shape=box, style="rounded, filled"];
80 [code="System.out.println(c + \"Happy all the time\");", color=white, fillcolor="#BFE6D3", label="8_ System.out.println(c + \"Happy all the time\");", node_type=expression_statement, shape=box, style="rounded, filled"];
81 [code="System.out.println(c + \"Happy all the time\")", color=white, fillcolor="#BFE6D3", label=method_invocation, node_type=method_invocation, shape=box, style="rounded, filled"];
82 [code="System.out", color=white, fillcolor="#BFE6D3", label=field_access, node_type=field_access, shape=box, style="rounded, filled"];
83 [code=System, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
84 [code=out, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
85 [code=println, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
86 [code="(c + \"Happy all the time\")", color=white, fillcolor="#BFE6D3", label=argument_list, node_type=argument_list, shape=box, style="rounded, filled"];
87 [code="c + \"Happy all the time\"", color=white, fillcolor="#BFE6D3", label=binary_expression, node_type=binary_expression, shape=box, style="rounded, filled"];
88 [code=c, color=white, fillcolor="#BFE6D3", label=identifier, node_type=identifier, shape=box, style="rounded, filled"];
89 [code="Happy all the time", color=white, fillcolor="#BFE6D3", label=string_literal, node_type=string_literal, shape=box, style="rounded, filled"];
91 [label="0_ function_call: add"];
1 [label="0_ start_node"];
2 [label="0_ exit_node"];
5 -> 6  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
6 -> 7  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
6 -> 8  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
6 -> 9  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
9 -> 10  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 11  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 12  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 13  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 14  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 19  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
10 -> 20  [color=red, controlflow_type=first_next_line, edge_type=CFG_edge, key=0, label=first_next_line];
14 -> 15  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 16  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 17  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
15 -> 18  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 20  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 25  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 30  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 43  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 56  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 72  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
19 -> 80  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 21  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 22  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
20 -> 25  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
22 -> 23  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
22 -> 24  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
25 -> 26  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
25 -> 27  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
25 -> 30  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
27 -> 28  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
27 -> 29  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
30 -> 31  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
30 -> 43  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
30 -> 10  [color=red, controlflow_type=recursive_method_call, edge_type=CFG_edge, key=0, label=recursive_method_call];
31 -> 32  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
31 -> 35  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
32 -> 33  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
32 -> 34  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
35 -> 36  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
35 -> 39  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
35 -> 40  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
36 -> 37  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
36 -> 38  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
40 -> 41  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
40 -> 42  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
43 -> 44  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
43 -> 45  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
43 -> 56  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
43 -> 91  [color=red, controlflow_type=function_call, edge_type=CFG_edge, key=0, label=function_call];
43 -> 91  [color=red, controlflow_type=function_call, edge_type=CFG_edge, key=1, label=function_call];
45 -> 46  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
45 -> 47  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
47 -> 48  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
47 -> 49  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
49 -> 50  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
49 -> 51  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
51 -> 52  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
51 -> 53  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
53 -> 54  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
53 -> 55  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 57  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
56 -> 72  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
56 -> 91  [color=red, controlflow_type=function_call, edge_type=CFG_edge, key=0, label=function_call];
56 -> 91  [color=red, controlflow_type=function_call, edge_type=CFG_edge, key=1, label=function_call];
57 -> 58  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
57 -> 61  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
57 -> 62  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
58 -> 59  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
58 -> 60  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
62 -> 63  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
63 -> 64  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
63 -> 65  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
65 -> 66  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
65 -> 67  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
67 -> 68  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
67 -> 69  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
69 -> 70  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
69 -> 71  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
72 -> 73  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
72 -> 80  [color=red, controlflow_type=next_line, edge_type=CFG_edge, key=0, label=next_line];
72 -> 91  [color=red, controlflow_type=function_call, edge_type=CFG_edge, key=0, label=function_call];
73 -> 74  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
73 -> 75  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
75 -> 76  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
75 -> 77  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
77 -> 78  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
77 -> 79  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
80 -> 81  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
80 -> 2  [color=red, controlflow_type=exit_next, edge_type=CFG_edge, key=0, label=exit_next];
81 -> 82  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
81 -> 85  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
81 -> 86  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
82 -> 83  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
82 -> 84  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
86 -> 87  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
87 -> 88  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
87 -> 89  [color=indigo, edge_type=AST_edge, key=0, shape=vee];
91 -> 43  [color=red, controlflow_type=function_return, edge_type=CFG_edge, key=0, label=function_return];
91 -> 43  [color=red, controlflow_type=function_return, edge_type=CFG_edge, key=1, label=function_return];
91 -> 56  [color=red, controlflow_type=function_return, edge_type=CFG_edge, key=0, label=function_return];
91 -> 56  [color=red, controlflow_type=function_return, edge_type=CFG_edge, key=1, label=function_return];
91 -> 72  [color=red, controlflow_type=function_return, edge_type=CFG_edge, key=0, label=function_return];
1 -> 10  [color=red, controlflow_type=next, edge_type=CFG_edge, key=0, label=next];
}
